{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/mathFunctions.js","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./src/client/workers/space/celestialBody.js","webpack:///./src/client/workers/starSystem.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","ns","key","__esModule","create","bind","n","object","property","prototype","hasOwnProperty","p","s","10","e","hexidecimal","MathFunctions","add","x","result","arguments","length","subtract","y","multiply","divide","square","Math","pow","cube","computeLineLength","x1","y1","x2","y2","xdiff","ydiff","total","sqrt","computePerimeterByLength","side1","side2","side3","side4","convertFromBaseTenToBaseX","xbase","inval","xinval","remainder","getEllipsePoint","xr","yr","angle","rAngle","degreesToRadians","cos","sin","round","getEllipsePoints","startPoint","nextPoints","points","push","getCirclePoint","getCirclePoints","distanceBetweenCirclesCenters","diffXSqr","diffYSqr","getRectangleCenter","width","height","floor","getRectangleCorner","center","p1","ceil","p2","PI","__webpack_exports__","computePerimeter","x3","y3","x4","y4","computePerimeterOfSquare","side","areaOfTriangle","base","areaOfTrapizoid","abase","bbase","pythagorean","a","b","average","_arguments","sum","keys","forEach","areaOfCircle","radius","circumferenceOfACircle","surfaceAreaCone","sqrtTotal","sumtotal","volumeCone","surfaceAreaCylinder","volumeCylinder","surfaceAreaSphere","volumeSphere","inverse","oneOver","factorial","convertFromBaseXToBaseTen","incount","ivlen","num","valueToInt","end","charAt","radiansToDegrees","generateGUID","hexval","Date","getTime","guid","substring","instance","Constructor","TypeError","_classCallCheck","_defineProperties","target","props","descriptor","configurable","writable","protoProps","staticProps","_createClass","_typeof","assertThisInitialized","self","_possibleConstructorReturn","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","constructor","_inherits","ReferenceError","_assertThisInitialized","_setPrototypeOf","CelestialBody","Star","Planet","timerID","_CelestialBody","_this","options","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","xRadius","setupPoints","yRadius","isFixedCenter","centerPoints","centerPts","inherits_default","createClass_default","getVisablePosition","hidden","getHiddenPosition","increment","visable","color","hiddenRadius","direction","startAngle","speed","isShown","getCurrentPosition","_CelestialBody2","_this2","parentStar","getPoint","onmessage","msg","orbitalRadius","yOribialRadius","gstars","bigStar","smallerStar","stars","planetRadius","smallPlanet","pradius","xradius","planetTwo","ePradius","exradius","planetThree","planets","data","setWidthHeight","getStars","getInitialPosition","postMessage","white","shownPlanet","setInterval","whitePlanets","mfCentersDistance","centersDistance","radiusIntersect","radiusClose","bigStarNext","getNextPosition","smallerStarNext","black","sPlanetOne","mPlanetTwo","blackPlanets","console","log","blackPlanet","stop","clearInterval","_typeof2","obj","iterator"],"mappings":"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","file":"starSystem.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 57);\n","/** Math object gives us\n * abs(x) \t\tReturns the absolute value of a number\n * acos(x) \t\tReturns the arccosine of a number\n * asin(x) \t\tReturns the arcsine of a number\n * atan(x) \t\tReturns the arctangent of x as a numeric value between -PI/2 and PI/2 radians\n * atan2(y,x) \tReturns the angle theta of an (x,y) point as a numeric value between -PI and PI radians\n * ceil(x) \t\tReturns the value of a number rounded upwards to the nearest integer\n * cos(x) \t\tReturns the cosine of a number\n * exp(x) \t\tReturns the value of Ex\n * floor(x) \t\tReturns the value of a number rounded downwards to the nearest integer\n * log(x) \t\tReturns the natural logarithm (base E) of a number\n * max(x,y) \t\tReturns the number with the highest value of x and y\n * min(x,y) \t\tReturns the number with the lowest value of x and y\n * pow(x,y) \t\tReturns the value of x to the power of y\n * random() \t\tReturns a random number between 0 and 1\n * round(x) \t\tRounds a number to the nearest integer\n * sin(x) \t\tReturns the sine of a number\n * sqrt(x) \t\tReturns the square root of a number\n * tan(x) \t\tReturns the tangent of an angle\n * toSource() \tRepresents the source code of an object\n * valueOf() \tReturns the primitive value of a Math object\n * and more\n * extend the Math object in JavaScript\n * the Math object is static, so you do not call new on it, just set a reference to it\n */\n\n/**\n * add(x,y, ...)                Returns x + y [can handle more than 2 parameters ]\n */\nfunction add() {\n    let result = 0;\n    for ( let x = 0; x < arguments.length; x += 1 ) {\n        result += ( +arguments[ x ] );\n    }\n    return result;\n};\n\n/**\n * subtract(x,y)        Returns x - y\n */\nfunction subtract( x, y ) {\n    return ( ( +x ) - ( +y ) );\n};\n\n/**\n * multiply(x,y, ...)         Returns x * y   [can handle more than 2 parameters ]\n */\nfunction multiply() {\n    let result = 1;\n    for ( let x = 0; x < arguments.length; x += 1 ) {\n        let y = result;\n        result = ( +y ) * ( +arguments[ x ] );\n    }\n    return result;\n};\n\n/**\n * divide(x,y)            Returns x / y\n */\nfunction divide( x, y ) {\n    return ( ( +x ) / ( +y ) );\n};\n\n/**\n * squares a number\n * x * x or Math.pow(x,2)\n */\nfunction square( x ) {\n    return Math.pow( x, 2 );\n};\n\n/**\n * cubes a number\n * x * x * x or Math.pow(x,3)\n */\nfunction cube( x ) {\n    return Math.pow( x, 3 );\n};\n\n/**\n * computes the length of a line in an X-Y plane\n * using the pythagorean theorem ( x^2 + y^2 = z^2) and solving for z\n */\nfunction computeLineLength( x1, y1, x2, y2 ) {\n    let xdiff = subtract( x2, x1 );\n    let ydiff = subtract( y2, y1 );\n    let total = add( square( xdiff ), square( ydiff ) );\n    return Math.sqrt( total );\n};\n\n/**\n * computes the perimeter of a 4 sided object, given 4 points\n */\nfunction computePerimeter( x1, y1, x2, y2, x3, y3, x4, y4 ) {\n    let line1 = computeLineLength( x1, y1, x2, y2 );\n    let line2 = computeLineLength( x2, y2, x3, y3 );\n    let line3 = computeLineLength( x3, y3, x4, y4 );\n    let line4 = computeLineLength( x4, y4, x1, y1 );\n    return computePerimeterByLength( line1, line2, line3, line4 );\n};\n\n/**\n * computes the perimeter of a 4 sided object\n */\nfunction computePerimeterByLength( side1, side2, side3, side4 ) {\n    return add( side1, side2, side3, side4 );\n};\n\n/**\n * computes the perimeter of a square\n */\nfunction computePerimeterOfSquare( side ) {\n    return multiply( side, 4 );\n};\n\n/* compute area of a triangle */\nfunction areaOfTriangle( base, height ) {\n    return multiply( base, height, .5 );\n};\n\n/* compute area of a trapizoid */\nfunction areaOfTrapizoid( height, abase, bbase ) {\n    let a1, a2;\n    a1 = add( abase, bbase );\n    a2 = divide( a1, 2 );\n    return multiply( height, a2 );\n};\n\nfunction pythagorean( a, b ) {\n    // return C given a^2 + b^2 = c^2\n    return Math.sqrt( square( a ) + square( b ) );\n};\n\n/* compute average */\nfunction average() {\n    let sum = 0;\n    Object.keys( arguments ).forEach( ( e ) => {\n        sum = add( sum, arguments[ e ] );\n    } );\n    return divide( sum, arguments.length );\n};\n\n/* compute area of a circle */\nfunction areaOfCircle( radius ) {\n    return multiply( Math.PI, square( radius ) );\n};\n\n/* compute the circumference of a circle */\nfunction circumferenceOfACircle( radius ) {\n    return multiply( 2, Math.PI, radius );\n};\n\n/* compute the surface area of a cone */\nfunction surfaceAreaCone( radius, height ) {\n    let sqrtTotal = Math.sqrt( multiply( Math.PI, square( radius ) ) );\n    let sumtotal = add( square( radius ), square( height ) );\n    let radiuisTotal = multiply( radius, Math.PI, sumtotal );\n    return add( sqrtTotal, radiuisTotal );\n};\n\n/* compute volume of a cone */\nfunction volumeCone( radius, height ) {\n    return multiply( ( 1 / 3 ), Math.PI, square( radius ), height );\n};\n\n/* compute the surface area of a cylinder */\nfunction surfaceAreaCylinder( radius, height ) {\n    let radiusTotal = multiply( 2, Math.PI, square( radius ) );\n    let heightTotal = multiply( 2, Math.PI, radius, height );\n    return add( radiusTotal, heightTotal );\n};\n\n/* compute the volume of a cylinder */\nfunction volumeCylinder( radius, height ) {\n    return multiply( Math.PI, square( radius ), height );\n};\n\n/* compute the surface area of a sphere */\nfunction surfaceAreaSphere( radius ) {\n    return multiply( 4, Math.PI, square( radius ) );\n};\n\n/* compute the volume of a sphere */\nfunction volumeSphere( radius ) {\n    return multiply( ( 4 / 3 ), Math.PI, cube( radius ) );\n};\n\n/* invert a value */\nfunction inverse( x ) {\n    return multiply( -1, x );\n};\n\nfunction oneOver( x ) {\n    return divide( 1, x );\n};\n\n/* compute a factorial */\nfunction factorial( x ) {\n    if ( ( +x ) <= 1 ) {\n        return 1;\n    }\n    let f = ( +x ) - 1;\n    return multiply( x, factorial( f ) );\n};\n\nconst hexidecimal = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\" ];\n\n/* convert from base ten to base x\n * not so good at converting from base 10 to base 10\n * up to base 16 or HEX */\nfunction convertFromBaseTenToBaseX( xbase, inval ) {\n    let xinval = inval;\n    let remainder = hexidecimal[ xinval % xbase ];\n    while ( xinval >= xbase ) {\n        let r1 = subtract( xinval, ( xinval % xbase ) );\n        xinval = divide( r1, xbase );\n        // in this case we do not want to add we want to append the strings together\n        if ( xinval >= xbase ) {\n            remainder = hexidecimal[ xinval % xbase ] + remainder;\n        } else {\n            remainder = hexidecimal[ xinval ] + remainder;\n        }\n    }\n    return remainder;\n};\n\n/* convert from base x to base ten\n * up to base 16 or HEX */\nfunction convertFromBaseXToBaseTen( xbase, inval ) {\n    let remainder = 0;\n    let num = 1;\n\n    function valueToInt( x ) {\n        let result = '';\n        for ( let p = 0, end = hexidecimal.length; p < end; p += 1 ) {\n            if ( hexidecimal[ p ] === x ) {\n                result = p;\n                break;\n            }\n        }\n        return result;\n    }\n\n    while ( num <= inval.length ) {\n        let incount = Math.pow( xbase, subtract( num, 1 ) );\n        let ivlen = subtract( inval.length, num );\n        let sschar = valueToInt( inval.charAt( ivlen ) );\n        remainder = add( remainder, multiply( sschar, incount ) );\n        num++;\n    }\n    return remainder;\n};\n\n// given an x and y radius and angle get the x, y point on the ellipse\nfunction getEllipsePoint( xr, yr, angle ) {\n    const rAngle = degreesToRadians( angle ),\n        x = multiply( xr, Math.cos( rAngle ) ),\n        y = multiply( yr, Math.sin( rAngle ) );\n\n    return {\n        x: Math.round( x ),\n        y: Math.round( y )\n    };\n};\n\n// give a radius get ALL the points on the circle\nfunction getEllipsePoints( xr, yr ) {\n    const points = [];\n    for ( let startPoint = 0; startPoint <= 360; startPoint++ ) {\n        const nextPoints = getEllipsePoint( xr, yr, startPoint );\n        points.push( nextPoints );\n    }\n    return points;\n};\n\n// given a radius and angle get the x, y point on the circle\nfunction getCirclePoint( r, angle ) {\n    const rAngle = degreesToRadians( angle ),\n        x = multiply( r, Math.cos( rAngle ) ),\n        y = multiply( r, Math.sin( rAngle ) );\n\n    return {\n        x: Math.round( x ),\n        y: Math.round( y )\n    };\n};\n\n// give a radius get ALL the points on the circle\nfunction getCirclePoints( r ) {\n    const points = [];\n    for ( let startPoint = 0; startPoint <= 360; startPoint++ ) {\n        const nextPoints = getCirclePoint( r, startPoint );\n        points.push( nextPoints );\n    }\n    return points;\n};\n\nfunction distanceBetweenCirclesCenters( x1, y1, x2, y2 ) {\n    const diffXSqr = square( subtract( x1, x2 ) ),\n        diffYSqr = square( subtract( y1, y2 ) );\n\n    return Math.sqrt( add( diffXSqr, diffYSqr ) );\n};\n\nfunction getRectangleCenter( width, height ) {\n    return {\n        x: Math.floor( divide( width, 2 ) ),\n        y: Math.floor( divide( height, 2 ) )\n    };\n};\n\nfunction getRectangleCorner( width, height ) {\n    const center = getRectangleCenter( width, height );\n    const p1 = Math.ceil( divide( center.x, 2 ) ),\n        p2 = Math.ceil( divide( center.y, 2 ) );\n    return ( p1 < p2 ? p1 : p2 );\n};\n\nfunction degreesToRadians( x ) {\n    return x * Math.PI / 180;\n};\n\nfunction radiansToDegrees( x ) {\n    return x * 180 / Math.PI;\n};\n\nfunction generateGUID() {\n    const timenow = new Date().getTime() * 1000000,\n        hexval = convertFromBaseTenToBaseX( 16, timenow );\n\n    let guid = '';\n    for ( let i = 0, l = hexval.length; i < l; i += 1 ) {\n        guid += ( hexval[ i ] << 1 );\n    }\n\n    guid = hexval + convertFromBaseTenToBaseX( 16, guid );\n    let result = '';\n    for ( let i = 0, l = guid.length; i < l; i += 1 ) {\n        result += guid[ i ];\n        if ( i > 0 && i % 5 === 0 && i % 10 !== 0 ) {\n            result += \"-\";\n        }\n        if ( i > 0 && i % 9 === 0 ) {\n            result += \"-\";\n        }\n    }\n    if ( result.substring( result.length - 1 ) === \"-\" ) {\n        result = result.substring( 0, result.length - 1 );\n    }\n    return result;\n\n};\n\nconst MathFunctions = {\n    add,\n    subtract,\n    multiply,\n    divide,\n    square,\n    cube,\n    computeLineLength,\n    computePerimeter,\n    computePerimeterByLength,\n    computePerimeterOfSquare,\n    areaOfTriangle,\n    areaOfTrapizoid,\n    pythagorean,\n    average,\n    areaOfCircle,\n    circumferenceOfACircle,\n    surfaceAreaCone,\n    volumeCone,\n    surfaceAreaCylinder,\n    volumeCylinder,\n    surfaceAreaSphere,\n    volumeSphere,\n    inverse,\n    oneOver,\n    factorial,\n    convertFromBaseTenToBaseX,\n    convertFromBaseXToBaseTen,\n    getEllipsePoint,\n    getEllipsePoints,\n    getCirclePoint,\n    getCirclePoints,\n    distanceBetweenCirclesCenters,\n    getRectangleCenter,\n    getRectangleCorner,\n    degreesToRadians,\n    radiansToDegrees,\n    generateGUID\n};\n\nexport {\n    add,\n    subtract,\n    multiply,\n    divide,\n    square,\n    cube,\n    computeLineLength,\n    computePerimeter,\n    computePerimeterByLength,\n    computePerimeterOfSquare,\n    areaOfTriangle,\n    areaOfTrapizoid,\n    pythagorean,\n    average,\n    areaOfCircle,\n    circumferenceOfACircle,\n    surfaceAreaCone,\n    volumeCone,\n    surfaceAreaCylinder,\n    volumeCylinder,\n    surfaceAreaSphere,\n    volumeSphere,\n    inverse,\n    oneOver,\n    factorial,\n    convertFromBaseTenToBaseX,\n    convertFromBaseXToBaseTen,\n    getEllipsePoint,\n    getEllipsePoints,\n    getCirclePoint,\n    getCirclePoints,\n    distanceBetweenCirclesCenters,\n    getRectangleCenter,\n    getRectangleCorner,\n    degreesToRadians,\n    radiansToDegrees,\n    generateGUID\n};\n\nexport default MathFunctions;\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","import {\n    add,\n    subtract,\n    getCurrentPosition,\n    getEllipsePoints,\n    getCirclePoints\n} from 'utils/mathFunctions';\n\nexport class CelestialBody {\n\n    constructor( options = {} ) {\n\n        this.color = options.color || 'red';\n        this.radius = options.radius || 5;\n        this.hiddenRadius = add( this.radius, 1 );\n        this.direction = options.direction && options.direction === 'clockwise' ? add : subtract;\n        this.angle = options.startAngle || 0;\n        this.speed = options.speed || 1;\n    }\n\n    setupPoints( xRadius = 30, yRadius ) {\n\n        if ( xRadius !== yRadius && yRadius ) {\n            this.points = getEllipsePoints( xRadius, yRadius );\n        } else {\n            this.points = getCirclePoints( xRadius );\n        }\n    }\n\n    increment() {\n        this.angle = this.direction( this.angle, this.speed );\n        if ( this.angle < 0 ) {\n            this.angle = 360;\n        } else if ( this.angle > 360 ) {\n            this.angle = 0;\n        }\n    }\n\n    getCurrentPosition( centerPoints, isShown ) {\n\n        return {\n            x: ( this.direction( centerPoints.x, this.points[ this.angle ].x ) ),\n            y: ( this.direction( centerPoints.y, this.points[ this.angle ].y ) ),\n            radius: ( isShown ? this.radius : this.hiddenRadius ),\n            color: ( isShown ? this.color : 'black' )\n        };\n    }\n\n    getHiddenPosition( centerPoints ) {\n        return this.getCurrentPosition( centerPoints, false );\n    }\n\n    getVisablePosition( centerPoints ) {\n        return this.getCurrentPosition( centerPoints, true );\n    }\n}\n\n// a simplified star implementation\nexport class Star extends CelestialBody {\n\n    constructor( options = {} ) {\n        super( options );\n\n        if ( options.xRadius ) {\n            this.setupPoints( options.xRadius, options.yRadius );\n        }\n\n        // a star can have a fixed center of rotation like the center of the canvas\n        // stars can also orbit another star so .... there is that\n        if ( options.isFixedCenter && options.centerPoints ) {\n            this.centerPts = options.centerPoints;\n        }\n    }\n\n    getInitialPosition( centerPoints ) {\n\n        const center = ( this.centerPts ? this.centerPts : centerPoints );\n\n        return this.getVisablePosition( center );\n    }\n\n    getNextPosition( centerPoints ) {\n\n        const center = ( this.centerPts ? this.centerPts : centerPoints );\n\n        this.hidden = this.getHiddenPosition( center );\n\n        this.increment();\n\n        this.visable = this.getVisablePosition( center );\n\n        return {\n            hidden: this.hidden,\n            visable: this.visable\n        };\n    }\n\n    getPoint() {\n\n        return {\n            hidden: {\n                x: this.hidden.x,\n                y: this.hidden.y\n            },\n            visable: {\n                x: this.visable.x,\n                y: this.visable.y\n            }\n        };\n    }\n}\n\nexport class Planet extends CelestialBody {\n\n    constructor( options = {} ) {\n        super( options );\n\n        if ( options.xRadius ) {\n            this.setupPoints( options.xRadius, options.yRadius );\n        }\n\n        // a star can have a fixed center of rotation like the center of the canvas\n        // stars can also orbit another star so .... there is that\n        if ( options.parentStar ) {\n            this.parentStar = options.parentStar;\n        }\n    }\n\n    getNextPosition() {\n\n        const center = this.parentStar.getPoint();\n\n        const hidden = this.getHiddenPosition( center.hidden );\n\n        this.increment();\n\n        const visable = this.getVisablePosition( center.visable );\n\n        return {\n            hidden,\n            visable\n        };\n    }\n}\n","import {\n    add,\n    divide,\n    getRectangleCenter,\n    getRectangleCorner,\n    distanceBetweenCirclesCenters,\n    square\n} from 'utils/mathFunctions';\n\nimport {\n    Star,\n    Planet\n} from 'client/workers/space/celestialBody';\n\nconst timeout = 100;\n\nlet center,\n    timerID;\n\nfunction getStars( center, orbitalRadius, yOribialRadius ) {\n\n    return [ {\n        color: '#FDB813',\n        radius: 24,\n        direction: 'counterClockwise',\n        startAngle: 180,\n        xRadius: orbitalRadius,\n        yRadius: yOribialRadius,\n        isFixedCenter: true,\n        centerPoints: center\n    }, {\n        color: '#FDB813',\n        radius: 18,\n        direction: 'counterClockwise',\n        startAngle: 0,\n        xRadius: orbitalRadius,\n        yRadius: yOribialRadius,\n        isFixedCenter: true,\n        centerPoints: center\n    } ];\n}\n\nonmessage = ( msg ) => {\n\n    if ( msg && msg.data && msg.data.setWidthHeight ) {\n        const width = msg.data.setWidthHeight[ 0 ],\n            height = msg.data.setWidthHeight[ 1 ];\n\n        center = getRectangleCenter( width, height ); // [125,125] or [400, 300]\n\n        const orbitalRadius = Math.ceil( divide( getRectangleCorner( width, height ), ( width > 600 ? 1.5 : 1.25 ) ) ); // 120 or 51\n\n        const yOribialRadius = ( width > 600 ? add( orbitalRadius, 50 ) : orbitalRadius );\n\n        // stars\n        const gstars = getStars( center, orbitalRadius, yOribialRadius );\n        const bigStar = new Star( gstars[ 0 ] ),\n            smallerStar = new Star( gstars[ 1 ] );\n\n        const stars = [\n            bigStar.getInitialPosition(),\n            smallerStar.getInitialPosition()\n        ];\n\n        // planets\n        const planetRadius = Math.floor( divide( orbitalRadius, ( width > 600 ? 3 : 1.65 ) ) );\n        const smallPlanet = new Planet( {\n            color: '#17e3ea',\n            radius: 3,\n            direction: 'counterClockwise',\n            startAngle: 90,\n            speed: 5,\n            parentStar: bigStar,\n            xRadius: planetRadius\n        } );\n\n        const pradius = add( planetRadius, ( width > 600 ? 28 : 17 ) );\n        const xradius = add( pradius, ( width > 600 ? 50 : 8 ) );\n        const planetTwo = new Planet( {\n            color: '#17e3ea',\n            radius: 7,\n            direction: 'counterClockwise',\n            startAngle: 180,\n            speed: 3,\n            parentStar: bigStar,\n            xRadius: pradius,\n            yRadius: xradius\n        } );\n\n        const ePradius = add( orbitalRadius, 75 );\n        const exradius = add( ePradius, 55 );\n        const planetThree = new Planet( {\n            color: '#17e3ea',\n            radius: ( width > 600 ? 6 : 0 ),\n            direction: 'counterClockwise',\n            startAngle: 270,\n            speed: 1,\n            xRadius: ePradius,\n            yRadius: exradius\n        } );\n\n        const planets = [ smallPlanet.getVisablePosition( stars[ 0 ] ),\n            planetTwo.getVisablePosition( stars[ 0 ] )\n        ];\n        if ( width > 600 ) {\n            planets.push( planetThree.getVisablePosition( stars[ 0 ] ) );\n        }\n\n        postMessage( {\n            stars: {\n                white: stars\n            },\n            planets: {\n                shownPlanet: planets\n            }\n        } );\n\n        timerID = setInterval( () => {\n\n            const bigStarNext = bigStar.getNextPosition(),\n                smallerStarNext = smallerStar.getNextPosition();\n            const black = [\n                bigStarNext.hidden,\n                smallerStarNext.hidden\n            ];\n\n            const sPlanetOne = smallPlanet.getNextPosition(),\n                mPlanetTwo = planetTwo.getNextPosition();\n            const blackPlanets = [\n                sPlanetOne.hidden,\n                mPlanetTwo.hidden\n            ];\n            if ( width > 600 ) {\n                blackPlanets.push( planetThree.getHiddenPosition( black[ 0 ] ) );\n            }\n\n            // increment planets\n            planetThree.increment();\n\n            const white = [\n                bigStarNext.visable,\n                smallerStarNext.visable\n            ];\n            const whitePlanets = [\n                sPlanetOne.visable,\n                mPlanetTwo.visable\n            ];\n            if ( width > 600 ) {\n                whitePlanets.push( planetThree.getVisablePosition( white[ 0 ] ) );\n\n                // check if 2 circles intersect\n                const mfCentersDistance = distanceBetweenCirclesCenters( whitePlanets[ 1 ].x, whitePlanets[ 1 ].y, whitePlanets[ 2 ].x, whitePlanets[ 2 ].y );\n                const centersDistance = Math.ceil( square( mfCentersDistance ) );\n\n                // radius + 5 in case they are near\n                const radiusIntersect = square( add( 7, 6 ) ),\n                    radiusClose = square( add( 7, 5, 6, 5 ) );\n\n                // touch\n                if ( centersDistance === radiusIntersect ) {\n                    console.log( 'Touching %s %s %s %s', whitePlanets[ 1 ].x, whitePlanets[ 1 ].y, whitePlanets[ 2 ].x, whitePlanets[ 2 ].y );\n                }\n                if ( centersDistance === radiusClose ) {\n                    console.log( 'Close touching %s %s %s %s', whitePlanets[ 1 ].x, whitePlanets[ 1 ].y, whitePlanets[ 2 ].x, whitePlanets[ 2 ].y );\n                }\n                // intersect\n                if ( centersDistance < radiusIntersect ) {\n                    console.log( 'Intersecting %s %s %s %s', whitePlanets[ 1 ].x, whitePlanets[ 1 ].y, whitePlanets[ 2 ].x, whitePlanets[ 2 ].y );\n                }\n                if ( centersDistance < radiusClose ) {\n                    console.log( 'Close intersecting %s %s %s %s', whitePlanets[ 1 ].x, whitePlanets[ 1 ].y, whitePlanets[ 2 ].x, whitePlanets[ 2 ].y );\n                }\n            }\n\n            postMessage( {\n                stars: {\n                    black,\n                    white\n                },\n                planets: {\n                    blackPlanet: blackPlanets,\n                    shownPlanet: whitePlanets\n                }\n            } );\n\n        }, timeout );\n    } else if ( msg && msg.data && msg.data.stop ) {\n        clearInterval( timerID );\n    }\n};\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;"],"sourceRoot":""}