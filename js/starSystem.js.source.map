{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/client/workers/starSystem.js","webpack:///./src/utils/mathFunctions.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","ns","key","__esModule","create","bind","n","object","property","prototype","hasOwnProperty","p","s","40","e","utils_mathFunctions__WEBPACK_IMPORTED_MODULE_0__","center","resultPoints","planetPoints","sPlanetPoints","startPoint","planetPoint","sPlanetPoint","timerID","getStars","points","hider","color","x","MF","subtract","y","diameter","add","getPlanet","starX","starY","planetColor","__webpack_exports__","onmessage","msg","width","height","radius","planetRadius","pradius","xradius","stars","planet","sPlanet","data","setWidthHeight","getRectangleCenter","divide","getRectangleCorner","Math","floor","getCirclePoints","getEllipsePoints","postMessage","white","planets","shownPlanet","concat","setInterval","sShownPlanet","black","blackPlanet","sBlackPlanet","stop","clearInterval","MathFunctions","result","arguments","length","pow","x1","y1","x2","y2","xdiff","ydiff","total","square","sqrt","x3","y3","x4","y4","line1","computeLineLength","line2","line3","line4","computePerimeterByLength","side1","side2","side3","side4","side","multiply","base","abase","bbase","a1","a2","a","b","_arguments","sum","keys","forEach","PI","sqrtTotal","sumtotal","radiuisTotal","radiusTotal","heightTotal","cube","f","factorial","xbase","inval","r1","xinval","remainder","hexidecimal","incount","ivlen","sschar","num","valueToInt","charAt","xr","yr","angle","rAngle","degreesToRadians","cos","sin","round","nextPoints","getEllipsePoint","push","getCirclePoint","p1","ceil","p2","timenow","Date","getTime","hexval","convertFromBaseTenToBaseX","guid","substring"],"mappings":"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","file":"starSystem.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 40);\n","import MF from 'utils/mathFunctions';\n\nconst self = this,\n    timeout = 100;\n\nlet center,\n    resultPoints,\n    planetPoints,\n    sPlanetPoints,\n    startPoint = 0,\n    planetPoint = 0,\n    sPlanetPoint = 0,\n    timerID;\n\nfunction getStars( points, hider ) {\n\n    // Zeta Reticuli :P\n    const color = ( hider ? 'black' : '#FDB813' );\n\n    return [ {\n        x: ( MF.subtract( center[ 0 ], points.x ) ),\n        y: ( MF.subtract( center[ 1 ], points.y ) ),\n        diameter: ( hider ? 25 : 24 ),\n        color: color\n    }, {\n        x: ( MF.add( center[ 0 ], points.x ) ),\n        y: ( MF.add( center[ 1 ], points.y ) ),\n        diameter: ( hider ? 19 : 18 ),\n        color: color\n    } ];\n}\n\nfunction getPlanet( starX, starY, points, hider, diameter ) {\n\n    const planetColor = ( hider ? 'black' : '#17e3ea' );\n\n    return [ {\n        x: ( MF.subtract( starX, points.x ) ),\n        y: ( MF.subtract( starY, points.y ) ),\n        diameter: ( hider ? MF.add( diameter, 1 ) : diameter ),\n        color: planetColor\n    } ];\n}\n\nonmessage = ( msg ) => {\n\n    if ( msg && msg.data && msg.data.setWidthHeight ) {\n        const width = msg.data.setWidthHeight[ 0 ],\n            height = msg.data.setWidthHeight[ 1 ];\n\n        center = MF.getRectangleCenter( width, height );\n\n        const radius = MF.divide( MF.getRectangleCorner( width, height ), 1.25 );\n        const planetRadius = Math.floor( MF.divide( radius, ( width > 600 ? 3 : 1.65 ) ) );\n\n        resultPoints = MF.getCirclePoints( radius );\n        planetPoints = MF.getCirclePoints( MF.add( planetRadius, 0 ) );\n        const pradius = MF.add( planetRadius, ( width > 600 ? 28 : 17 ) );\n        const xradius = MF.add( pradius, ( width > 600 ? 50 : 8 ) );\n        sPlanetPoints = MF.getEllipsePoints( xradius, pradius );\n\n        const stars = getStars( resultPoints[ startPoint ], false );\n\n        const planet = getPlanet( stars[ 0 ].x, stars[ 0 ].y, planetPoints[ planetPoint ], false, 3 ),\n            sPlanet = getPlanet( stars[ 0 ].x, stars[ 0 ].y, sPlanetPoints[ sPlanetPoint ], false, 7 );\n\n        postMessage( {\n            stars: {\n                white: stars\n            },\n            planets: {\n                shownPlanet: planet.concat( sPlanet )\n            }\n        } );\n\n        timerID = setInterval( () => {\n\n            const oldPoint = resultPoints[ startPoint ];\n            const black = getStars( oldPoint, true );\n            const blackPlanet = getPlanet( black[ 0 ].x, black[ 0 ].y, planetPoints[ planetPoint ], true, 3 );\n            const sBlackPlanet = getPlanet( black[ 0 ].x, black[ 0 ].y, sPlanetPoints[ sPlanetPoint ], true, 7 );\n            startPoint = ( startPoint <= 0 ? 360 : --startPoint );\n            if ( planetPoint < 2 ) {\n                planetPoint = 360;\n            } else {\n                planetPoint -= 3;\n            }\n            if ( sPlanetPoint < 1 ) {\n                sPlanetPoint = 360;\n            } else {\n                sPlanetPoint -= 2;\n            }\n            const newPoint = resultPoints[ startPoint ];\n            const white = getStars( newPoint, false );\n            const shownPlanet = getPlanet( white[ 0 ].x, white[ 0 ].y, planetPoints[ planetPoint ], false, 3 );\n            const sShownPlanet = getPlanet( white[ 0 ].x, white[ 0 ].y, sPlanetPoints[ sPlanetPoint ], false, 7 );\n\n            postMessage( {\n                stars: {\n                    black,\n                    white\n                },\n                planets: {\n                    blackPlanet: blackPlanet.concat( sBlackPlanet ),\n                    shownPlanet: shownPlanet.concat( sShownPlanet )\n                }\n            } );\n\n        }, timeout );\n    } else if ( msg && msg.data && msg.data.stop ) {\n        clearInterval( timerID );\n    }\n};\n","/** Math object gives us\n * abs(x) \t\tReturns the absolute value of a number\n * acos(x) \t\tReturns the arccosine of a number\n * asin(x) \t\tReturns the arcsine of a number\n * atan(x) \t\tReturns the arctangent of x as a numeric value between -PI/2 and PI/2 radians\n * atan2(y,x) \tReturns the angle theta of an (x,y) point as a numeric value between -PI and PI radians\n * ceil(x) \t\tReturns the value of a number rounded upwards to the nearest integer\n * cos(x) \t\tReturns the cosine of a number\n * exp(x) \t\tReturns the value of Ex\n * floor(x) \t\tReturns the value of a number rounded downwards to the nearest integer\n * log(x) \t\tReturns the natural logarithm (base E) of a number\n * max(x,y) \t\tReturns the number with the highest value of x and y\n * min(x,y) \t\tReturns the number with the lowest value of x and y\n * pow(x,y) \t\tReturns the value of x to the power of y\n * random() \t\tReturns a random number between 0 and 1\n * round(x) \t\tRounds a number to the nearest integer\n * sin(x) \t\tReturns the sine of a number\n * sqrt(x) \t\tReturns the square root of a number\n * tan(x) \t\tReturns the tangent of an angle\n * toSource() \tRepresents the source code of an object\n * valueOf() \tReturns the primitive value of a Math object\n * and more\n * extend the Math object in JavaScript\n * the Math object is static, so you do not call new on it, just set a reference to it\n */\nconst MathFunctions = {};\n\n/**\n * add(x,y, ...)                Returns x + y [can handle more than 2 parameters ]\n */\nMathFunctions.add = function () {\n    let result = 0;\n    for ( let x = 0; x < arguments.length; x += 1 ) {\n        result += ( +arguments[ x ] );\n    }\n    return result;\n};\n\n/**\n * subtract(x,y)        Returns x - y\n */\nMathFunctions.subtract = function ( x, y ) {\n    return ( ( +x ) - ( +y ) );\n};\n\n/**\n * multiply(x,y, ...)         Returns x * y   [can handle more than 2 parameters ]\n */\nMathFunctions.multiply = function () {\n    let result = 1;\n    for ( let x = 0; x < arguments.length; x += 1 ) {\n        let y = result;\n        result = ( +y ) * ( +arguments[ x ] );\n    }\n    return result;\n};\n\n/**\n * divide(x,y)            Returns x / y\n */\nMathFunctions.divide = function ( x, y ) {\n    return ( ( +x ) / ( +y ) );\n};\n\n/**\n * squares a number\n * x * x or Math.pow(x,2)\n */\nMathFunctions.square = function ( x ) {\n    return Math.pow( x, 2 );\n};\n\n/**\n * cubes a number\n * x * x * x or Math.pow(x,3)\n */\nMathFunctions.cube = function ( x ) {\n    return Math.pow( x, 3 );\n};\n\n/**\n * computes the length of a line in an X-Y plane\n * using the pythagorean theorem ( x^2 + y^2 = z^2) and solving for z\n */\nMathFunctions.computeLineLength = function ( x1, y1, x2, y2 ) {\n    let xdiff = MathFunctions.subtract( x2, x1 );\n    let ydiff = MathFunctions.subtract( y2, y1 );\n    let total = MathFunctions.add( MathFunctions.square( xdiff ), MathFunctions.square( ydiff ) );\n    return Math.sqrt( total );\n};\n\n/**\n * computes the perimeter of a 4 sided object, given 4 points\n */\nMathFunctions.computePerimeter = function ( x1, y1, x2, y2, x3, y3, x4, y4 ) {\n    let line1 = MathFunctions.computeLineLength( x1, y1, x2, y2 );\n    let line2 = MathFunctions.computeLineLength( x2, y2, x3, y3 );\n    let line3 = MathFunctions.computeLineLength( x3, y3, x4, y4 );\n    let line4 = MathFunctions.computeLineLength( x4, y4, x1, y1 );\n    return MathFunctions.computePerimeterByLength( line1, line2, line3, line4 );\n};\n\n/**\n * computes the perimeter of a 4 sided object\n */\nMathFunctions.computePerimeterByLength = function ( side1, side2, side3, side4 ) {\n    return MathFunctions.add( side1, side2, side3, side4 );\n};\n\n/**\n * computes the perimeter of a square\n */\nMathFunctions.computePerimeterOfSquare = function ( side ) {\n    return MathFunctions.multiply( side, 4 );\n};\n\n/* compute area of a triangle */\nMathFunctions.areaOfTriangle = function ( base, height ) {\n    return MathFunctions.multiply( base, height, .5 );\n};\n\n/* compute area of a trapizoid */\nMathFunctions.areaOfTrapizoid = function ( height, abase, bbase ) {\n    let a1, a2;\n    a1 = MathFunctions.add( abase, bbase );\n    a2 = MathFunctions.divide( a1, 2 );\n    return MathFunctions.multiply( height, a2 );\n};\n\nMathFunctions.pythagorean = function ( a, b ) {\n    // return C given a^2 + b^2 = c^2\n    return Math.sqrt( MathFunctions.square( a ) + MathFunctions.square( b ) );\n};\n\n/* compute average */\nMathFunctions.average = function () {\n    let sum = 0;\n    Object.keys( arguments ).forEach( ( e ) => {\n        sum = MathFunctions.add( sum, arguments[ e ] );\n    } );\n    return MathFunctions.divide( sum, arguments.length );\n};\n\n/* compute area of a circle */\nMathFunctions.areaOfCircle = function ( radius ) {\n    return MathFunctions.multiply( Math.PI, MathFunctions.square( radius ) );\n};\n\n/* compute the circumference of a circle */\nMathFunctions.circumferenceOfACircle = function ( radius ) {\n    return MathFunctions.multiply( 2, Math.PI, radius );\n};\n\n/* compute the surface area of a cone */\nMathFunctions.surfaceAreaCone = function ( radius, height ) {\n    let sqrtTotal = Math.sqrt( MathFunctions.multiply( Math.PI, MathFunctions.square( radius ) ) );\n    let sumtotal = MathFunctions.add( MathFunctions.square( radius ), MathFunctions.square( height ) );\n    let radiuisTotal = MathFunctions.multiply( radius, Math.PI, sumtotal );\n    return MathFunctions.add( sqrtTotal, radiuisTotal );\n};\n\n/* compute volume of a cone */\nMathFunctions.volumeCone = function ( radius, height ) {\n    return MathFunctions.multiply( ( 1 / 3 ), Math.PI, MathFunctions.square( radius ), height );\n};\n\n/* compute the surface area of a cylinder */\nMathFunctions.surfaceAreaCylinder = function ( radius, height ) {\n    let radiusTotal = MathFunctions.multiply( 2, Math.PI, MathFunctions.square( radius ) );\n    let heightTotal = MathFunctions.multiply( 2, Math.PI, radius, height );\n    return MathFunctions.add( radiusTotal, heightTotal );\n};\n\n/* compute the volume of a cylinder */\nMathFunctions.volumeCylinder = function ( radius, height ) {\n    return MathFunctions.multiply( Math.PI, MathFunctions.square( radius ), height );\n};\n\n/* compute the surface area of a sphere */\nMathFunctions.surfaceAreaSphere = function ( radius ) {\n    return MathFunctions.multiply( 4, Math.PI, MathFunctions.square( radius ) );\n};\n\n/* compute the volume of a sphere */\nMathFunctions.volumeSphere = function ( radius ) {\n    return MathFunctions.multiply( ( 4 / 3 ), Math.PI, MathFunctions.cube( radius ) );\n};\n\n/* invert a value */\nMathFunctions.inverse = function ( x ) {\n    return MathFunctions.multiply( -1, x );\n};\n\nMathFunctions.oneOver = function ( x ) {\n    return MathFunctions.divide( 1, x );\n};\n\n/* compute a factorial */\nMathFunctions.factorial = function ( x ) {\n    if ( ( +x ) <= 1 ) {\n        return 1;\n    }\n    let f = ( +x ) - 1;\n    return MathFunctions.multiply( x, MathFunctions.factorial( f ) );\n};\n\nMathFunctions.hexidecimal = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\" ];\n\n/* convert from base ten to base x\n * not so good at converting from base 10 to base 10\n * up to base 16 or HEX */\nMathFunctions.convertFromBaseTenToBaseX = function ( xbase, inval ) {\n    let xinval = inval;\n    let remainder = MathFunctions.hexidecimal[ xinval % xbase ];\n    while ( xinval >= xbase ) {\n        let r1 = MathFunctions.subtract( xinval, ( xinval % xbase ) );\n        xinval = MathFunctions.divide( r1, xbase );\n        // in this case we do not want to add we want to append the strings together\n        if ( xinval >= xbase ) {\n            remainder = MathFunctions.hexidecimal[ xinval % xbase ] + remainder;\n        } else {\n            remainder = MathFunctions.hexidecimal[ xinval ] + remainder;\n        }\n    }\n    return remainder;\n};\n\n/* convert from base x to base ten\n * up to base 16 or HEX */\nMathFunctions.convertFromBaseXToBaseTen = function ( xbase, inval ) {\n    let remainder = 0;\n    let num = 1;\n\n    function valueToInt( x ) {\n        for ( let p = 0; p < MathFunctions.hexidecimal.length; p += 1 ) {\n            if ( MathFunctions.hexidecimal[ p ] === x ) {\n                return p;\n            }\n        }\n        return '';\n    }\n    while ( num <= inval.length ) {\n        let incount = Math.pow( xbase, MathFunctions.subtract( num, 1 ) );\n        let ivlen = MathFunctions.subtract( inval.length, num );\n        let sschar = valueToInt( inval.charAt( ivlen ) );\n        remainder = MathFunctions.add( remainder, MathFunctions.multiply( sschar, incount ) );\n        num++;\n    }\n    return remainder;\n};\n\n// given an x and y radius and angle get the x, y point on the ellipse\nMathFunctions.getEllipsePoint = function ( xr, yr, angle ) {\n    const rAngle = MathFunctions.degreesToRadians( angle ),\n        x = MathFunctions.multiply( xr, Math.cos( rAngle ) ),\n        y = MathFunctions.multiply( yr, Math.sin( rAngle ) );\n\n    return {\n        x: Math.round( x ),\n        y: Math.round( y )\n    };\n};\n\n// give a radius get ALL the points on the circle\nMathFunctions.getEllipsePoints = function ( xr, yr ) {\n    const points = [];\n    for ( let startPoint = 0; startPoint <= 360; startPoint++ ) {\n        const nextPoints = MathFunctions.getEllipsePoint( xr, yr, startPoint );\n        points.push( nextPoints );\n    }\n    return points;\n};\n\n// given a radius and angle get the x, y point on the circle\nMathFunctions.getCirclePoint = function ( r, angle ) {\n    const rAngle = MathFunctions.degreesToRadians( angle ),\n        x = MathFunctions.multiply( r, Math.cos( rAngle ) ),\n        y = MathFunctions.multiply( r, Math.sin( rAngle ) );\n\n    return {\n        x: Math.round( x ),\n        y: Math.round( y )\n    };\n};\n\n// give a radius get ALL the points on the circle\nMathFunctions.getCirclePoints = function ( r ) {\n    const points = [];\n    for ( let startPoint = 0; startPoint <= 360; startPoint++ ) {\n        const nextPoints = MathFunctions.getCirclePoint( r, startPoint );\n        points.push( nextPoints );\n    }\n    return points;\n};\n\nMathFunctions.getRectangleCenter = function ( width, height ) {\n    return [ Math.floor( MathFunctions.divide( width, 2 ) ), Math.floor( MathFunctions.divide( height, 2 ) ) ];\n};\n\nMathFunctions.getRectangleCorner = function ( width, height ) {\n    const center = MathFunctions.getRectangleCenter( width, height );\n    const p1 = Math.ceil( MathFunctions.divide( center[ 0 ], 2 ) ),\n        p2 = Math.ceil( MathFunctions.divide( center[ 1 ], 2 ) );\n    return ( p1 < p2 ? p1 : p2 );\n};\n\nMathFunctions.degreesToRadians = function ( x ) {\n    return x * Math.PI / 180;\n};\n\nMathFunctions.radiansToDegrees = function ( x ) {\n    return x * 180 / Math.PI;\n};\n\nMathFunctions.generateGUID = function () {\n    const timenow = new Date().getTime() * 1000000,\n        hexval = MathFunctions.convertFromBaseTenToBaseX( 16, timenow );\n\n    let guid = '';\n    for ( let i = 0, l = hexval.length; i < l; i += 1 ) {\n        guid += ( hexval[ i ] << 1 );\n    }\n\n    guid = hexval + MathFunctions.convertFromBaseTenToBaseX( 16, guid );\n    let result = '';\n    for ( let i = 0, l = guid.length; i < l; i += 1 ) {\n        result += guid[ i ];\n        if ( i > 0 && i % 5 === 0 && i % 10 !== 0 ) {\n            result += \"-\";\n        }\n        if ( i > 0 && i % 9 === 0 ) {\n            result += \"-\";\n        }\n    }\n    if ( result.substring( result.length - 1 ) === \"-\" ) {\n        result = result.substring( 0, result.length - 1 );\n    }\n    return result;\n\n};\n\nexport default MathFunctions;\n"],"sourceRoot":""}