{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/client/workers/starSystem.js","webpack:///./src/utils/mathFunctions.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","ns","key","__esModule","create","bind","n","object","property","prototype","hasOwnProperty","p","s","42","e","utils_mathFunctions__WEBPACK_IMPORTED_MODULE_0__","center","resultPoints","planetPoints","sPlanetPoints","ePlanetPoints","startPoint","planetPoint","sPlanetPoint","ePlanetPoint","timerID","getStars","points","hider","color","x","MF","subtract","y","diameter","add","getPlanet","starX","starY","planetColor","__webpack_exports__","onmessage","msg","width","height","radius","planetRadius","pradius","xradius","ePradius","exradius","stars","planet","sPlanet","ePlanet","data","setWidthHeight","getRectangleCenter","divide","getRectangleCorner","Math","floor","getCirclePoints","getEllipsePoints","postMessage","white","planets","shownPlanet","concat","setInterval","sShownPlanet","eShownPlanet","black","blackPlanet","sBlackPlanet","eBlackPlanet","stop","clearInterval","MathFunctions","result","arguments","length","pow","x1","y1","x2","y2","xdiff","ydiff","total","square","sqrt","x3","y3","x4","y4","line1","computeLineLength","line2","line3","line4","computePerimeterByLength","side1","side2","side3","side4","side","multiply","base","abase","bbase","a1","a2","a","b","_arguments","sum","keys","forEach","PI","sqrtTotal","sumtotal","radiuisTotal","radiusTotal","heightTotal","cube","f","factorial","xbase","inval","r1","xinval","remainder","hexidecimal","incount","ivlen","sschar","num","valueToInt","charAt","xr","yr","angle","rAngle","degreesToRadians","cos","sin","round","nextPoints","getEllipsePoint","push","getCirclePoint","p1","ceil","p2","timenow","Date","getTime","hexval","convertFromBaseTenToBaseX","guid","substring"],"mappings":"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","file":"starSystem.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 42);\n","import MF from 'utils/mathFunctions';\n\nconst self = this,\n    timeout = 100;\n\nlet center,\n    resultPoints,\n    planetPoints,\n    sPlanetPoints,\n    ePlanetPoints,\n    startPoint = 0,\n    planetPoint = 0,\n    sPlanetPoint = 0,\n    ePlanetPoint = 225,\n    timerID;\n\nfunction getStars( points, hider ) {\n\n    // Zeta Reticuli :P\n    const color = ( hider ? 'black' : '#FDB813' );\n\n    return [ {\n        x: ( MF.subtract( center[ 0 ], points.x ) ),\n        y: ( MF.subtract( center[ 1 ], points.y ) ),\n        diameter: ( hider ? 25 : 24 ),\n        color: color\n    }, {\n        x: ( MF.add( center[ 0 ], points.x ) ),\n        y: ( MF.add( center[ 1 ], points.y ) ),\n        diameter: ( hider ? 19 : 18 ),\n        color: color\n    } ];\n}\n\nfunction getPlanet( starX, starY, points, hider, diameter ) {\n\n    const planetColor = ( hider ? 'black' : '#17e3ea' );\n\n    return [ {\n        x: ( MF.subtract( starX, points.x ) ),\n        y: ( MF.subtract( starY, points.y ) ),\n        diameter: ( hider ? MF.add( diameter, 1 ) : diameter ),\n        color: planetColor\n    } ];\n}\n\nonmessage = ( msg ) => {\n\n    if ( msg && msg.data && msg.data.setWidthHeight ) {\n        const width = msg.data.setWidthHeight[ 0 ],\n            height = msg.data.setWidthHeight[ 1 ];\n\n        center = MF.getRectangleCenter( width, height );\n\n        const radius = MF.divide( MF.getRectangleCorner( width, height ), 1.25 );\n        const planetRadius = Math.floor( MF.divide( radius, ( width > 600 ? 3 : 1.65 ) ) );\n\n        resultPoints = MF.getCirclePoints( radius );\n        planetPoints = MF.getCirclePoints( MF.add( planetRadius, 0 ) );\n        const pradius = MF.add( planetRadius, ( width > 600 ? 28 : 17 ) );\n        const xradius = MF.add( pradius, ( width > 600 ? 50 : 8 ) );\n        sPlanetPoints = MF.getEllipsePoints( xradius, pradius );\n\n        const ePradius = MF.add( radius, 75 );\n        const exradius = MF.add( ePradius, 55 );\n        ePlanetPoints = MF.getEllipsePoints( ePradius, exradius );\n\n        const stars = getStars( resultPoints[ startPoint ], false );\n\n        const planet = getPlanet( stars[ 0 ].x, stars[ 0 ].y, planetPoints[ planetPoint ], false, 3 ),\n            sPlanet = getPlanet( stars[ 0 ].x, stars[ 0 ].y, sPlanetPoints[ sPlanetPoint ], false, 7 ),\n            ePlanet = getPlanet( center[ 0 ], center[ 1 ], ePlanetPoints[ ePlanetPoint ], false, ( width > 600 ? 6 : 0 ) );\n\n        postMessage( {\n            stars: {\n                white: stars\n            },\n            planets: {\n                shownPlanet: planet.concat( sPlanet, ePlanet )\n            }\n        } );\n\n        timerID = setInterval( () => {\n\n            const oldPoint = resultPoints[ startPoint ];\n            const black = getStars( oldPoint, true );\n            const blackPlanet = getPlanet( black[ 0 ].x, black[ 0 ].y, planetPoints[ planetPoint ], true, 3 );\n            const sBlackPlanet = getPlanet( black[ 0 ].x, black[ 0 ].y, sPlanetPoints[ sPlanetPoint ], true, 7 );\n            const eBlackPlanet = getPlanet( center[ 0 ], center[ 1 ], ePlanetPoints[ ePlanetPoint ], true, ( width > 600 ? 6 : 0 ) );\n            startPoint = ( startPoint <= 0 ? 360 : --startPoint );\n            if ( planetPoint < 4 ) {\n                planetPoint = 360;\n            } else {\n                planetPoint -= 4;\n            }\n            if ( sPlanetPoint < 3 ) {\n                sPlanetPoint = 360;\n            } else {\n                sPlanetPoint -= 3;\n            }\n            if ( ePlanetPoint < 2 ) {\n                ePlanetPoint = 360;\n            } else {\n                ePlanetPoint -= 2;\n            }\n            const newPoint = resultPoints[ startPoint ];\n            const white = getStars( newPoint, false );\n            const shownPlanet = getPlanet( white[ 0 ].x, white[ 0 ].y, planetPoints[ planetPoint ], false, 3 );\n            const sShownPlanet = getPlanet( white[ 0 ].x, white[ 0 ].y, sPlanetPoints[ sPlanetPoint ], false, 7 );\n            const eShownPlanet = getPlanet( center[ 0 ], center[ 1 ], ePlanetPoints[ ePlanetPoint ], false, ( width > 600 ? 6 : 0 ) );\n\n            postMessage( {\n                stars: {\n                    black,\n                    white\n                },\n                planets: {\n                    blackPlanet: blackPlanet.concat( sBlackPlanet, eBlackPlanet ),\n                    shownPlanet: shownPlanet.concat( sShownPlanet, eShownPlanet )\n                }\n            } );\n\n        }, timeout );\n    } else if ( msg && msg.data && msg.data.stop ) {\n        clearInterval( timerID );\n    }\n};\n","/** Math object gives us\n * abs(x) \t\tReturns the absolute value of a number\n * acos(x) \t\tReturns the arccosine of a number\n * asin(x) \t\tReturns the arcsine of a number\n * atan(x) \t\tReturns the arctangent of x as a numeric value between -PI/2 and PI/2 radians\n * atan2(y,x) \tReturns the angle theta of an (x,y) point as a numeric value between -PI and PI radians\n * ceil(x) \t\tReturns the value of a number rounded upwards to the nearest integer\n * cos(x) \t\tReturns the cosine of a number\n * exp(x) \t\tReturns the value of Ex\n * floor(x) \t\tReturns the value of a number rounded downwards to the nearest integer\n * log(x) \t\tReturns the natural logarithm (base E) of a number\n * max(x,y) \t\tReturns the number with the highest value of x and y\n * min(x,y) \t\tReturns the number with the lowest value of x and y\n * pow(x,y) \t\tReturns the value of x to the power of y\n * random() \t\tReturns a random number between 0 and 1\n * round(x) \t\tRounds a number to the nearest integer\n * sin(x) \t\tReturns the sine of a number\n * sqrt(x) \t\tReturns the square root of a number\n * tan(x) \t\tReturns the tangent of an angle\n * toSource() \tRepresents the source code of an object\n * valueOf() \tReturns the primitive value of a Math object\n * and more\n * extend the Math object in JavaScript\n * the Math object is static, so you do not call new on it, just set a reference to it\n */\nconst MathFunctions = {};\n\n/**\n * add(x,y, ...)                Returns x + y [can handle more than 2 parameters ]\n */\nMathFunctions.add = function () {\n    let result = 0;\n    for ( let x = 0; x < arguments.length; x += 1 ) {\n        result += ( +arguments[ x ] );\n    }\n    return result;\n};\n\n/**\n * subtract(x,y)        Returns x - y\n */\nMathFunctions.subtract = function ( x, y ) {\n    return ( ( +x ) - ( +y ) );\n};\n\n/**\n * multiply(x,y, ...)         Returns x * y   [can handle more than 2 parameters ]\n */\nMathFunctions.multiply = function () {\n    let result = 1;\n    for ( let x = 0; x < arguments.length; x += 1 ) {\n        let y = result;\n        result = ( +y ) * ( +arguments[ x ] );\n    }\n    return result;\n};\n\n/**\n * divide(x,y)            Returns x / y\n */\nMathFunctions.divide = function ( x, y ) {\n    return ( ( +x ) / ( +y ) );\n};\n\n/**\n * squares a number\n * x * x or Math.pow(x,2)\n */\nMathFunctions.square = function ( x ) {\n    return Math.pow( x, 2 );\n};\n\n/**\n * cubes a number\n * x * x * x or Math.pow(x,3)\n */\nMathFunctions.cube = function ( x ) {\n    return Math.pow( x, 3 );\n};\n\n/**\n * computes the length of a line in an X-Y plane\n * using the pythagorean theorem ( x^2 + y^2 = z^2) and solving for z\n */\nMathFunctions.computeLineLength = function ( x1, y1, x2, y2 ) {\n    let xdiff = MathFunctions.subtract( x2, x1 );\n    let ydiff = MathFunctions.subtract( y2, y1 );\n    let total = MathFunctions.add( MathFunctions.square( xdiff ), MathFunctions.square( ydiff ) );\n    return Math.sqrt( total );\n};\n\n/**\n * computes the perimeter of a 4 sided object, given 4 points\n */\nMathFunctions.computePerimeter = function ( x1, y1, x2, y2, x3, y3, x4, y4 ) {\n    let line1 = MathFunctions.computeLineLength( x1, y1, x2, y2 );\n    let line2 = MathFunctions.computeLineLength( x2, y2, x3, y3 );\n    let line3 = MathFunctions.computeLineLength( x3, y3, x4, y4 );\n    let line4 = MathFunctions.computeLineLength( x4, y4, x1, y1 );\n    return MathFunctions.computePerimeterByLength( line1, line2, line3, line4 );\n};\n\n/**\n * computes the perimeter of a 4 sided object\n */\nMathFunctions.computePerimeterByLength = function ( side1, side2, side3, side4 ) {\n    return MathFunctions.add( side1, side2, side3, side4 );\n};\n\n/**\n * computes the perimeter of a square\n */\nMathFunctions.computePerimeterOfSquare = function ( side ) {\n    return MathFunctions.multiply( side, 4 );\n};\n\n/* compute area of a triangle */\nMathFunctions.areaOfTriangle = function ( base, height ) {\n    return MathFunctions.multiply( base, height, .5 );\n};\n\n/* compute area of a trapizoid */\nMathFunctions.areaOfTrapizoid = function ( height, abase, bbase ) {\n    let a1, a2;\n    a1 = MathFunctions.add( abase, bbase );\n    a2 = MathFunctions.divide( a1, 2 );\n    return MathFunctions.multiply( height, a2 );\n};\n\nMathFunctions.pythagorean = function ( a, b ) {\n    // return C given a^2 + b^2 = c^2\n    return Math.sqrt( MathFunctions.square( a ) + MathFunctions.square( b ) );\n};\n\n/* compute average */\nMathFunctions.average = function () {\n    let sum = 0;\n    Object.keys( arguments ).forEach( ( e ) => {\n        sum = MathFunctions.add( sum, arguments[ e ] );\n    } );\n    return MathFunctions.divide( sum, arguments.length );\n};\n\n/* compute area of a circle */\nMathFunctions.areaOfCircle = function ( radius ) {\n    return MathFunctions.multiply( Math.PI, MathFunctions.square( radius ) );\n};\n\n/* compute the circumference of a circle */\nMathFunctions.circumferenceOfACircle = function ( radius ) {\n    return MathFunctions.multiply( 2, Math.PI, radius );\n};\n\n/* compute the surface area of a cone */\nMathFunctions.surfaceAreaCone = function ( radius, height ) {\n    let sqrtTotal = Math.sqrt( MathFunctions.multiply( Math.PI, MathFunctions.square( radius ) ) );\n    let sumtotal = MathFunctions.add( MathFunctions.square( radius ), MathFunctions.square( height ) );\n    let radiuisTotal = MathFunctions.multiply( radius, Math.PI, sumtotal );\n    return MathFunctions.add( sqrtTotal, radiuisTotal );\n};\n\n/* compute volume of a cone */\nMathFunctions.volumeCone = function ( radius, height ) {\n    return MathFunctions.multiply( ( 1 / 3 ), Math.PI, MathFunctions.square( radius ), height );\n};\n\n/* compute the surface area of a cylinder */\nMathFunctions.surfaceAreaCylinder = function ( radius, height ) {\n    let radiusTotal = MathFunctions.multiply( 2, Math.PI, MathFunctions.square( radius ) );\n    let heightTotal = MathFunctions.multiply( 2, Math.PI, radius, height );\n    return MathFunctions.add( radiusTotal, heightTotal );\n};\n\n/* compute the volume of a cylinder */\nMathFunctions.volumeCylinder = function ( radius, height ) {\n    return MathFunctions.multiply( Math.PI, MathFunctions.square( radius ), height );\n};\n\n/* compute the surface area of a sphere */\nMathFunctions.surfaceAreaSphere = function ( radius ) {\n    return MathFunctions.multiply( 4, Math.PI, MathFunctions.square( radius ) );\n};\n\n/* compute the volume of a sphere */\nMathFunctions.volumeSphere = function ( radius ) {\n    return MathFunctions.multiply( ( 4 / 3 ), Math.PI, MathFunctions.cube( radius ) );\n};\n\n/* invert a value */\nMathFunctions.inverse = function ( x ) {\n    return MathFunctions.multiply( -1, x );\n};\n\nMathFunctions.oneOver = function ( x ) {\n    return MathFunctions.divide( 1, x );\n};\n\n/* compute a factorial */\nMathFunctions.factorial = function ( x ) {\n    if ( ( +x ) <= 1 ) {\n        return 1;\n    }\n    let f = ( +x ) - 1;\n    return MathFunctions.multiply( x, MathFunctions.factorial( f ) );\n};\n\nMathFunctions.hexidecimal = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\" ];\n\n/* convert from base ten to base x\n * not so good at converting from base 10 to base 10\n * up to base 16 or HEX */\nMathFunctions.convertFromBaseTenToBaseX = function ( xbase, inval ) {\n    let xinval = inval;\n    let remainder = MathFunctions.hexidecimal[ xinval % xbase ];\n    while ( xinval >= xbase ) {\n        let r1 = MathFunctions.subtract( xinval, ( xinval % xbase ) );\n        xinval = MathFunctions.divide( r1, xbase );\n        // in this case we do not want to add we want to append the strings together\n        if ( xinval >= xbase ) {\n            remainder = MathFunctions.hexidecimal[ xinval % xbase ] + remainder;\n        } else {\n            remainder = MathFunctions.hexidecimal[ xinval ] + remainder;\n        }\n    }\n    return remainder;\n};\n\n/* convert from base x to base ten\n * up to base 16 or HEX */\nMathFunctions.convertFromBaseXToBaseTen = function ( xbase, inval ) {\n    let remainder = 0;\n    let num = 1;\n\n    function valueToInt( x ) {\n        for ( let p = 0; p < MathFunctions.hexidecimal.length; p += 1 ) {\n            if ( MathFunctions.hexidecimal[ p ] === x ) {\n                return p;\n            }\n        }\n        return '';\n    }\n    while ( num <= inval.length ) {\n        let incount = Math.pow( xbase, MathFunctions.subtract( num, 1 ) );\n        let ivlen = MathFunctions.subtract( inval.length, num );\n        let sschar = valueToInt( inval.charAt( ivlen ) );\n        remainder = MathFunctions.add( remainder, MathFunctions.multiply( sschar, incount ) );\n        num++;\n    }\n    return remainder;\n};\n\n// given an x and y radius and angle get the x, y point on the ellipse\nMathFunctions.getEllipsePoint = function ( xr, yr, angle ) {\n    const rAngle = MathFunctions.degreesToRadians( angle ),\n        x = MathFunctions.multiply( xr, Math.cos( rAngle ) ),\n        y = MathFunctions.multiply( yr, Math.sin( rAngle ) );\n\n    return {\n        x: Math.round( x ),\n        y: Math.round( y )\n    };\n};\n\n// give a radius get ALL the points on the circle\nMathFunctions.getEllipsePoints = function ( xr, yr ) {\n    const points = [];\n    for ( let startPoint = 0; startPoint <= 360; startPoint++ ) {\n        const nextPoints = MathFunctions.getEllipsePoint( xr, yr, startPoint );\n        points.push( nextPoints );\n    }\n    return points;\n};\n\n// given a radius and angle get the x, y point on the circle\nMathFunctions.getCirclePoint = function ( r, angle ) {\n    const rAngle = MathFunctions.degreesToRadians( angle ),\n        x = MathFunctions.multiply( r, Math.cos( rAngle ) ),\n        y = MathFunctions.multiply( r, Math.sin( rAngle ) );\n\n    return {\n        x: Math.round( x ),\n        y: Math.round( y )\n    };\n};\n\n// give a radius get ALL the points on the circle\nMathFunctions.getCirclePoints = function ( r ) {\n    const points = [];\n    for ( let startPoint = 0; startPoint <= 360; startPoint++ ) {\n        const nextPoints = MathFunctions.getCirclePoint( r, startPoint );\n        points.push( nextPoints );\n    }\n    return points;\n};\n\nMathFunctions.getRectangleCenter = function ( width, height ) {\n    return [ Math.floor( MathFunctions.divide( width, 2 ) ), Math.floor( MathFunctions.divide( height, 2 ) ) ];\n};\n\nMathFunctions.getRectangleCorner = function ( width, height ) {\n    const center = MathFunctions.getRectangleCenter( width, height );\n    const p1 = Math.ceil( MathFunctions.divide( center[ 0 ], 2 ) ),\n        p2 = Math.ceil( MathFunctions.divide( center[ 1 ], 2 ) );\n    return ( p1 < p2 ? p1 : p2 );\n};\n\nMathFunctions.degreesToRadians = function ( x ) {\n    return x * Math.PI / 180;\n};\n\nMathFunctions.radiansToDegrees = function ( x ) {\n    return x * 180 / Math.PI;\n};\n\nMathFunctions.generateGUID = function () {\n    const timenow = new Date().getTime() * 1000000,\n        hexval = MathFunctions.convertFromBaseTenToBaseX( 16, timenow );\n\n    let guid = '';\n    for ( let i = 0, l = hexval.length; i < l; i += 1 ) {\n        guid += ( hexval[ i ] << 1 );\n    }\n\n    guid = hexval + MathFunctions.convertFromBaseTenToBaseX( 16, guid );\n    let result = '';\n    for ( let i = 0, l = guid.length; i < l; i += 1 ) {\n        result += guid[ i ];\n        if ( i > 0 && i % 5 === 0 && i % 10 !== 0 ) {\n            result += \"-\";\n        }\n        if ( i > 0 && i % 9 === 0 ) {\n            result += \"-\";\n        }\n    }\n    if ( result.substring( result.length - 1 ) === \"-\" ) {\n        result = result.substring( 0, result.length - 1 );\n    }\n    return result;\n\n};\n\nexport default MathFunctions;\n"],"sourceRoot":""}