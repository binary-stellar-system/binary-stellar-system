{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./src/client/space/celestialMath.js","webpack:///./src/client/workers/starSystem.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///./src/utils/mathFunctions.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","ns","key","__esModule","create","bind","n","object","property","prototype","hasOwnProperty","p","s","25","e","instance","Constructor","TypeError","_classCallCheck","_defineProperties","target","props","descriptor","length","configurable","writable","protoProps","staticProps","_createClass","_typeof","assertThisInitialized","self","_possibleConstructorReturn","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","constructor","_inherits","ReferenceError","_assertThisInitialized","_setPrototypeOf","CelestialBody","Star","Planet","center","timerID","_CelestialBody","_this","options","arguments","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","xRadius","setupPoints","yRadius","isFixedCenter","centerPoints","centerPts","inherits_default","createClass_default","hidden","getHiddenPosition","increment","visable","getVisablePosition","x","y","color","radius","hiddenRadius","add","direction","subtract","angle","startAngle","speed","points","getEllipsePoints","getCirclePoints","isShown","getCurrentPosition","_CelestialBody2","_this2","parentStar","getPoint","onmessage","msg","width","height","orbitalRadius","bigStar","smallerStar","stars","planetRadius","smallPlanet","pradius","xradius","planetTwo","ePradius","exradius","planetThree","planets","data","setWidthHeight","getRectangleCenter","divide","getRectangleCorner","Math","floor","postMessage","white","shownPlanet","setInterval","whitePlanets","mfCentersDistance","centersDistance","radiusIntersect","radiusClose","bigStarNext","getNextPosition","smallerStarNext","black","sPlanetOne","mPlanetTwo","blackPlanets","distanceBetweenCirclesCenters","ceil","square","console","log","blackPlanet","stop","clearInterval","_typeof2","obj","iterator","hexidecimal","MathFunctions","result","multiply","pow","cube","computeLineLength","x1","y1","x2","y2","xdiff","ydiff","total","sqrt","computePerimeterByLength","side1","side2","side3","side4","convertFromBaseTenToBaseX","xbase","inval","xinval","remainder","getEllipsePoint","xr","yr","rAngle","degreesToRadians","cos","sin","round","startPoint","nextPoints","push","getCirclePoint","diffXSqr","diffYSqr","p1","p2","PI","__webpack_exports__","computePerimeter","x3","y3","x4","y4","computePerimeterOfSquare","side","areaOfTriangle","base","areaOfTrapizoid","abase","bbase","pythagorean","a","b","average","_arguments","sum","keys","forEach","areaOfCircle","circumferenceOfACircle","surfaceAreaCone","sqrtTotal","sumtotal","volumeCone","surfaceAreaCylinder","volumeCylinder","surfaceAreaSphere","volumeSphere","inverse","oneOver","factorial","convertFromBaseXToBaseTen","incount","ivlen","num","valueToInt","end","charAt","radiansToDegrees","generateGUID","hexval","Date","getTime","guid","substring"],"mappings":"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","file":"starSystem.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 56);\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","import {\n    add,\n    subtract,\n    getCurrentPosition,\n    getEllipsePoints,\n    getCirclePoints\n} from 'utils/mathFunctions';\n\nexport class CelestialBody {\n\n    constructor( options = {} ) {\n\n        this.color = options.color || 'red';\n        this.radius = options.radius || 5;\n        this.hiddenRadius = add( this.radius, 1 );\n        this.direction = options.direction && options.direction === 'clockwise' ? add : subtract;\n        this.angle = options.startAngle || 0;\n        this.speed = options.speed || 1;\n    }\n\n    setupPoints( xRadius = 30, yRadius ) {\n\n        if ( xRadius !== yRadius && yRadius ) {\n            this.points = getEllipsePoints( xRadius, yRadius );\n        } else {\n            this.points = getCirclePoints( xRadius );\n        }\n    }\n\n    increment() {\n        this.angle = this.direction( this.angle, this.speed );\n        if ( this.angle < 0 ) {\n            this.angle = 360;\n        } else if ( this.angle > 360 ) {\n            this.angle = 0;\n        }\n    }\n\n    getCurrentPosition( centerPoints, isShown ) {\n\n        return {\n            x: ( this.direction( centerPoints.x, this.points[ this.angle ].x ) ),\n            y: ( this.direction( centerPoints.y, this.points[ this.angle ].y ) ),\n            radius: ( isShown ? this.radius : this.hiddenRadius ),\n            color: ( isShown ? this.color : 'black' )\n        };\n    }\n\n    getHiddenPosition( centerPoints ) {\n        return this.getCurrentPosition( centerPoints, false );\n    }\n\n    getVisablePosition( centerPoints ) {\n        return this.getCurrentPosition( centerPoints, true );\n    }\n}\n\n// a simplified star implementation\nexport class Star extends CelestialBody {\n\n    constructor( options = {} ) {\n        super( options );\n\n        if ( options.xRadius ) {\n            this.setupPoints( options.xRadius, options.yRadius );\n        }\n\n        // a star can have a fixed center of rotation like the center of the canvas\n        // stars can also orbit another star so .... there is that\n        if ( options.isFixedCenter && options.centerPoints ) {\n            this.centerPts = options.centerPoints;\n        }\n    }\n\n    getNextPosition( centerPoints ) {\n\n        const center = ( this.centerPts ? this.centerPts : centerPoints );\n\n        this.hidden = this.getHiddenPosition( center );\n\n        this.increment();\n\n        this.visable = this.getVisablePosition( center );\n\n        return {\n            hidden: this.hidden,\n            visable: this.visable\n        };\n    }\n\n    getPoint() {\n\n        return {\n            hidden: {\n                x: this.hidden.x,\n                y: this.hidden.y\n            },\n            visable: {\n                x: this.visable.x,\n                y: this.visable.y\n            }\n        };\n    }\n}\n\nexport class Planet extends CelestialBody {\n\n    constructor( options = {} ) {\n        super( options );\n\n        if ( options.xRadius ) {\n            this.setupPoints( options.xRadius, options.yRadius );\n        }\n\n        // a star can have a fixed center of rotation like the center of the canvas\n        // stars can also orbit another star so .... there is that\n        if ( options.parentStar ) {\n            this.parentStar = options.parentStar;\n        }\n    }\n\n    getNextPosition() {\n\n        const center = this.parentStar.getPoint();\n\n        const hidden = this.getHiddenPosition( center.hidden );\n\n        this.increment();\n\n        const visable = this.getVisablePosition( center.visable );\n\n        return {\n            hidden,\n            visable\n        };\n    }\n}\n","import {\n    add,\n    divide,\n    getRectangleCenter,\n    getRectangleCorner,\n    distanceBetweenCirclesCenters,\n    square\n} from 'utils/mathFunctions';\n\nimport {\n    Star,\n    Planet\n} from 'client/space/celestialMath';\n\nconst timeout = 100;\n\nlet center,\n    timerID;\n\nonmessage = ( msg ) => {\n\n    if ( msg && msg.data && msg.data.setWidthHeight ) {\n        const width = msg.data.setWidthHeight[ 0 ],\n            height = msg.data.setWidthHeight[ 1 ];\n\n        center = getRectangleCenter( width, height );\n\n        const orbitalRadius = divide( getRectangleCorner( width, height ), 1.25 );\n\n        // stars\n        const bigStar = new Star( {\n            color: '#FDB813',\n            radius: 24,\n            direction: 'counterClockwise',\n            startAngle: 180,\n            xRadius: orbitalRadius,\n            isFixedCenter: true,\n            centerPoints: center\n        } );\n\n        const smallerStar = new Star( {\n            color: '#FDB813',\n            radius: 18,\n            direction: 'counterClockwise',\n            startAngle: 0,\n            xRadius: orbitalRadius,\n            isFixedCenter: true,\n            centerPoints: center\n        } );\n\n        const stars = [\n            bigStar.getVisablePosition( center ),\n            smallerStar.getVisablePosition( center )\n        ];\n\n        // planets\n        const planetRadius = Math.floor( divide( orbitalRadius, ( width > 600 ? 3 : 1.65 ) ) );\n        const smallPlanet = new Planet( {\n            color: '#17e3ea',\n            radius: 3,\n            direction: 'counterClockwise',\n            startAngle: 90,\n            speed: 5,\n            parentStar: bigStar,\n            xRadius: planetRadius\n        } );\n\n        const pradius = add( planetRadius, ( width > 600 ? 28 : 17 ) );\n        const xradius = add( pradius, ( width > 600 ? 50 : 8 ) );\n        const planetTwo = new Planet( {\n            color: '#17e3ea',\n            radius: 7,\n            direction: 'counterClockwise',\n            startAngle: 180,\n            speed: 3,\n            parentStar: bigStar,\n            xRadius: pradius,\n            yRadius: xradius\n        } );\n\n        const ePradius = add( orbitalRadius, 75 );\n        const exradius = add( ePradius, 55 );\n        const planetThree = new Planet( {\n            color: '#17e3ea',\n            radius: ( width > 600 ? 6 : 0 ),\n            direction: 'counterClockwise',\n            startAngle: 270,\n            speed: 1,\n            xRadius: ePradius,\n            yRadius: exradius\n        } );\n\n        const planets = [ smallPlanet.getVisablePosition( stars[ 0 ] ),\n            planetTwo.getVisablePosition( stars[ 0 ] ),\n            planetThree.getVisablePosition( stars[ 0 ] )\n        ];\n\n        postMessage( {\n            stars: {\n                white: stars\n            },\n            planets: {\n                shownPlanet: planets\n            }\n        } );\n\n        timerID = setInterval( () => {\n\n            const bigStarNext = bigStar.getNextPosition(),\n                smallerStarNext = smallerStar.getNextPosition();\n            const black = [\n                bigStarNext.hidden,\n                smallerStarNext.hidden\n            ];\n\n            const sPlanetOne = smallPlanet.getNextPosition(),\n                mPlanetTwo = planetTwo.getNextPosition();\n            const blackPlanets = [\n                sPlanetOne.hidden,\n                mPlanetTwo.hidden,\n                planetThree.getHiddenPosition( black[ 0 ] )\n            ];\n\n            // increment planets\n            planetThree.increment();\n\n            const white = [\n                bigStarNext.visable,\n                smallerStarNext.visable\n            ];\n            const whitePlanets = [\n                sPlanetOne.visable,\n                mPlanetTwo.visable,\n                planetThree.getVisablePosition( white[ 0 ] )\n            ];\n\n            // check if 2 circles intersect\n            const mfCentersDistance = distanceBetweenCirclesCenters( whitePlanets[ 1 ].x, whitePlanets[ 1 ].y, whitePlanets[ 2 ].x, whitePlanets[ 2 ].y );\n            const centersDistance = Math.ceil( square( mfCentersDistance ) );\n\n            // radius + 5 in case they are near\n            const radiusIntersect = square( add( 7, 6 ) ),\n                radiusClose = square( add( 7, 5, 6, 5 ) );\n\n            // touch\n            if ( centersDistance === radiusIntersect ) {\n                console.log( 'Touching %s %s %s %s', whitePlanets[ 1 ].x, whitePlanets[ 1 ].y, whitePlanets[ 2 ].x, whitePlanets[ 2 ].y );\n            }\n            if ( centersDistance === radiusClose ) {\n                console.log( 'Close touching %s %s %s %s', whitePlanets[ 1 ].x, whitePlanets[ 1 ].y, whitePlanets[ 2 ].x, whitePlanets[ 2 ].y );\n            }\n            // intersect\n            if ( centersDistance < radiusIntersect ) {\n                console.log( 'Intersecting %s %s %s %s', whitePlanets[ 1 ].x, whitePlanets[ 1 ].y, whitePlanets[ 2 ].x, whitePlanets[ 2 ].y );\n            }\n            if ( centersDistance < radiusClose ) {\n                console.log( 'Close intersecting %s %s %s %s', whitePlanets[ 1 ].x, whitePlanets[ 1 ].y, whitePlanets[ 2 ].x, whitePlanets[ 2 ].y );\n            }\n\n            postMessage( {\n                stars: {\n                    black,\n                    white\n                },\n                planets: {\n                    blackPlanet: blackPlanets,\n                    shownPlanet: whitePlanets\n                }\n            } );\n\n        }, timeout );\n    } else if ( msg && msg.data && msg.data.stop ) {\n        clearInterval( timerID );\n    }\n};\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","/** Math object gives us\n * abs(x) \t\tReturns the absolute value of a number\n * acos(x) \t\tReturns the arccosine of a number\n * asin(x) \t\tReturns the arcsine of a number\n * atan(x) \t\tReturns the arctangent of x as a numeric value between -PI/2 and PI/2 radians\n * atan2(y,x) \tReturns the angle theta of an (x,y) point as a numeric value between -PI and PI radians\n * ceil(x) \t\tReturns the value of a number rounded upwards to the nearest integer\n * cos(x) \t\tReturns the cosine of a number\n * exp(x) \t\tReturns the value of Ex\n * floor(x) \t\tReturns the value of a number rounded downwards to the nearest integer\n * log(x) \t\tReturns the natural logarithm (base E) of a number\n * max(x,y) \t\tReturns the number with the highest value of x and y\n * min(x,y) \t\tReturns the number with the lowest value of x and y\n * pow(x,y) \t\tReturns the value of x to the power of y\n * random() \t\tReturns a random number between 0 and 1\n * round(x) \t\tRounds a number to the nearest integer\n * sin(x) \t\tReturns the sine of a number\n * sqrt(x) \t\tReturns the square root of a number\n * tan(x) \t\tReturns the tangent of an angle\n * toSource() \tRepresents the source code of an object\n * valueOf() \tReturns the primitive value of a Math object\n * and more\n * extend the Math object in JavaScript\n * the Math object is static, so you do not call new on it, just set a reference to it\n */\n\n/**\n * add(x,y, ...)                Returns x + y [can handle more than 2 parameters ]\n */\nfunction add() {\n    let result = 0;\n    for ( let x = 0; x < arguments.length; x += 1 ) {\n        result += ( +arguments[ x ] );\n    }\n    return result;\n};\n\n/**\n * subtract(x,y)        Returns x - y\n */\nfunction subtract( x, y ) {\n    return ( ( +x ) - ( +y ) );\n};\n\n/**\n * multiply(x,y, ...)         Returns x * y   [can handle more than 2 parameters ]\n */\nfunction multiply() {\n    let result = 1;\n    for ( let x = 0; x < arguments.length; x += 1 ) {\n        let y = result;\n        result = ( +y ) * ( +arguments[ x ] );\n    }\n    return result;\n};\n\n/**\n * divide(x,y)            Returns x / y\n */\nfunction divide( x, y ) {\n    return ( ( +x ) / ( +y ) );\n};\n\n/**\n * squares a number\n * x * x or Math.pow(x,2)\n */\nfunction square( x ) {\n    return Math.pow( x, 2 );\n};\n\n/**\n * cubes a number\n * x * x * x or Math.pow(x,3)\n */\nfunction cube( x ) {\n    return Math.pow( x, 3 );\n};\n\n/**\n * computes the length of a line in an X-Y plane\n * using the pythagorean theorem ( x^2 + y^2 = z^2) and solving for z\n */\nfunction computeLineLength( x1, y1, x2, y2 ) {\n    let xdiff = subtract( x2, x1 );\n    let ydiff = subtract( y2, y1 );\n    let total = add( square( xdiff ), square( ydiff ) );\n    return Math.sqrt( total );\n};\n\n/**\n * computes the perimeter of a 4 sided object, given 4 points\n */\nfunction computePerimeter( x1, y1, x2, y2, x3, y3, x4, y4 ) {\n    let line1 = computeLineLength( x1, y1, x2, y2 );\n    let line2 = computeLineLength( x2, y2, x3, y3 );\n    let line3 = computeLineLength( x3, y3, x4, y4 );\n    let line4 = computeLineLength( x4, y4, x1, y1 );\n    return computePerimeterByLength( line1, line2, line3, line4 );\n};\n\n/**\n * computes the perimeter of a 4 sided object\n */\nfunction computePerimeterByLength( side1, side2, side3, side4 ) {\n    return add( side1, side2, side3, side4 );\n};\n\n/**\n * computes the perimeter of a square\n */\nfunction computePerimeterOfSquare( side ) {\n    return multiply( side, 4 );\n};\n\n/* compute area of a triangle */\nfunction areaOfTriangle( base, height ) {\n    return multiply( base, height, .5 );\n};\n\n/* compute area of a trapizoid */\nfunction areaOfTrapizoid( height, abase, bbase ) {\n    let a1, a2;\n    a1 = add( abase, bbase );\n    a2 = divide( a1, 2 );\n    return multiply( height, a2 );\n};\n\nfunction pythagorean( a, b ) {\n    // return C given a^2 + b^2 = c^2\n    return Math.sqrt( square( a ) + square( b ) );\n};\n\n/* compute average */\nfunction average() {\n    let sum = 0;\n    Object.keys( arguments ).forEach( ( e ) => {\n        sum = add( sum, arguments[ e ] );\n    } );\n    return divide( sum, arguments.length );\n};\n\n/* compute area of a circle */\nfunction areaOfCircle( radius ) {\n    return multiply( Math.PI, square( radius ) );\n};\n\n/* compute the circumference of a circle */\nfunction circumferenceOfACircle( radius ) {\n    return multiply( 2, Math.PI, radius );\n};\n\n/* compute the surface area of a cone */\nfunction surfaceAreaCone( radius, height ) {\n    let sqrtTotal = Math.sqrt( multiply( Math.PI, square( radius ) ) );\n    let sumtotal = add( square( radius ), square( height ) );\n    let radiuisTotal = multiply( radius, Math.PI, sumtotal );\n    return add( sqrtTotal, radiuisTotal );\n};\n\n/* compute volume of a cone */\nfunction volumeCone( radius, height ) {\n    return multiply( ( 1 / 3 ), Math.PI, square( radius ), height );\n};\n\n/* compute the surface area of a cylinder */\nfunction surfaceAreaCylinder( radius, height ) {\n    let radiusTotal = multiply( 2, Math.PI, square( radius ) );\n    let heightTotal = multiply( 2, Math.PI, radius, height );\n    return add( radiusTotal, heightTotal );\n};\n\n/* compute the volume of a cylinder */\nfunction volumeCylinder( radius, height ) {\n    return multiply( Math.PI, square( radius ), height );\n};\n\n/* compute the surface area of a sphere */\nfunction surfaceAreaSphere( radius ) {\n    return multiply( 4, Math.PI, square( radius ) );\n};\n\n/* compute the volume of a sphere */\nfunction volumeSphere( radius ) {\n    return multiply( ( 4 / 3 ), Math.PI, cube( radius ) );\n};\n\n/* invert a value */\nfunction inverse( x ) {\n    return multiply( -1, x );\n};\n\nfunction oneOver( x ) {\n    return divide( 1, x );\n};\n\n/* compute a factorial */\nfunction factorial( x ) {\n    if ( ( +x ) <= 1 ) {\n        return 1;\n    }\n    let f = ( +x ) - 1;\n    return multiply( x, factorial( f ) );\n};\n\nconst hexidecimal = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\" ];\n\n/* convert from base ten to base x\n * not so good at converting from base 10 to base 10\n * up to base 16 or HEX */\nfunction convertFromBaseTenToBaseX( xbase, inval ) {\n    let xinval = inval;\n    let remainder = hexidecimal[ xinval % xbase ];\n    while ( xinval >= xbase ) {\n        let r1 = subtract( xinval, ( xinval % xbase ) );\n        xinval = divide( r1, xbase );\n        // in this case we do not want to add we want to append the strings together\n        if ( xinval >= xbase ) {\n            remainder = hexidecimal[ xinval % xbase ] + remainder;\n        } else {\n            remainder = hexidecimal[ xinval ] + remainder;\n        }\n    }\n    return remainder;\n};\n\n/* convert from base x to base ten\n * up to base 16 or HEX */\nfunction convertFromBaseXToBaseTen( xbase, inval ) {\n    let remainder = 0;\n    let num = 1;\n\n    function valueToInt( x ) {\n        let result = '';\n        for ( let p = 0, end = hexidecimal.length; p < end; p += 1 ) {\n            if ( hexidecimal[ p ] === x ) {\n                result = p;\n                break;\n            }\n        }\n        return result;\n    }\n\n    while ( num <= inval.length ) {\n        let incount = Math.pow( xbase, subtract( num, 1 ) );\n        let ivlen = subtract( inval.length, num );\n        let sschar = valueToInt( inval.charAt( ivlen ) );\n        remainder = add( remainder, multiply( sschar, incount ) );\n        num++;\n    }\n    return remainder;\n};\n\n// given an x and y radius and angle get the x, y point on the ellipse\nfunction getEllipsePoint( xr, yr, angle ) {\n    const rAngle = degreesToRadians( angle ),\n        x = multiply( xr, Math.cos( rAngle ) ),\n        y = multiply( yr, Math.sin( rAngle ) );\n\n    return {\n        x: Math.round( x ),\n        y: Math.round( y )\n    };\n};\n\n// give a radius get ALL the points on the circle\nfunction getEllipsePoints( xr, yr ) {\n    const points = [];\n    for ( let startPoint = 0; startPoint <= 360; startPoint++ ) {\n        const nextPoints = getEllipsePoint( xr, yr, startPoint );\n        points.push( nextPoints );\n    }\n    return points;\n};\n\n// given a radius and angle get the x, y point on the circle\nfunction getCirclePoint( r, angle ) {\n    const rAngle = degreesToRadians( angle ),\n        x = multiply( r, Math.cos( rAngle ) ),\n        y = multiply( r, Math.sin( rAngle ) );\n\n    return {\n        x: Math.round( x ),\n        y: Math.round( y )\n    };\n};\n\n// give a radius get ALL the points on the circle\nfunction getCirclePoints( r ) {\n    const points = [];\n    for ( let startPoint = 0; startPoint <= 360; startPoint++ ) {\n        const nextPoints = getCirclePoint( r, startPoint );\n        points.push( nextPoints );\n    }\n    return points;\n};\n\nfunction distanceBetweenCirclesCenters( x1, y1, x2, y2 ) {\n    const diffXSqr = square( subtract( x1, x2 ) ),\n        diffYSqr = square( subtract( y1, y2 ) );\n\n    return Math.sqrt( add( diffXSqr, diffYSqr ) );\n};\n\nfunction getRectangleCenter( width, height ) {\n    return {\n        x: Math.floor( divide( width, 2 ) ),\n        y: Math.floor( divide( height, 2 ) )\n    };\n};\n\nfunction getRectangleCorner( width, height ) {\n    const center = getRectangleCenter( width, height );\n    const p1 = Math.ceil( divide( center.x, 2 ) ),\n        p2 = Math.ceil( divide( center.y, 2 ) );\n    return ( p1 < p2 ? p1 : p2 );\n};\n\nfunction degreesToRadians( x ) {\n    return x * Math.PI / 180;\n};\n\nfunction radiansToDegrees( x ) {\n    return x * 180 / Math.PI;\n};\n\nfunction generateGUID() {\n    const timenow = new Date().getTime() * 1000000,\n        hexval = convertFromBaseTenToBaseX( 16, timenow );\n\n    let guid = '';\n    for ( let i = 0, l = hexval.length; i < l; i += 1 ) {\n        guid += ( hexval[ i ] << 1 );\n    }\n\n    guid = hexval + convertFromBaseTenToBaseX( 16, guid );\n    let result = '';\n    for ( let i = 0, l = guid.length; i < l; i += 1 ) {\n        result += guid[ i ];\n        if ( i > 0 && i % 5 === 0 && i % 10 !== 0 ) {\n            result += \"-\";\n        }\n        if ( i > 0 && i % 9 === 0 ) {\n            result += \"-\";\n        }\n    }\n    if ( result.substring( result.length - 1 ) === \"-\" ) {\n        result = result.substring( 0, result.length - 1 );\n    }\n    return result;\n\n};\n\nconst MathFunctions = {\n    add,\n    subtract,\n    multiply,\n    divide,\n    square,\n    cube,\n    computeLineLength,\n    computePerimeter,\n    computePerimeterByLength,\n    computePerimeterOfSquare,\n    areaOfTriangle,\n    areaOfTrapizoid,\n    pythagorean,\n    average,\n    areaOfCircle,\n    circumferenceOfACircle,\n    surfaceAreaCone,\n    volumeCone,\n    surfaceAreaCylinder,\n    volumeCylinder,\n    surfaceAreaSphere,\n    volumeSphere,\n    inverse,\n    oneOver,\n    factorial,\n    convertFromBaseTenToBaseX,\n    convertFromBaseXToBaseTen,\n    getEllipsePoint,\n    getEllipsePoints,\n    getCirclePoint,\n    getCirclePoints,\n    distanceBetweenCirclesCenters,\n    getRectangleCenter,\n    getRectangleCorner,\n    degreesToRadians,\n    radiansToDegrees,\n    generateGUID\n};\n\nexport {\n    add,\n    subtract,\n    multiply,\n    divide,\n    square,\n    cube,\n    computeLineLength,\n    computePerimeter,\n    computePerimeterByLength,\n    computePerimeterOfSquare,\n    areaOfTriangle,\n    areaOfTrapizoid,\n    pythagorean,\n    average,\n    areaOfCircle,\n    circumferenceOfACircle,\n    surfaceAreaCone,\n    volumeCone,\n    surfaceAreaCylinder,\n    volumeCylinder,\n    surfaceAreaSphere,\n    volumeSphere,\n    inverse,\n    oneOver,\n    factorial,\n    convertFromBaseTenToBaseX,\n    convertFromBaseXToBaseTen,\n    getEllipsePoint,\n    getEllipsePoints,\n    getCirclePoint,\n    getCirclePoints,\n    distanceBetweenCirclesCenters,\n    getRectangleCenter,\n    getRectangleCorner,\n    degreesToRadians,\n    radiansToDegrees,\n    generateGUID\n};\n\nexport default MathFunctions;\n"],"sourceRoot":""}