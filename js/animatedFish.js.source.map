{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/client/workers/animatedFish.js","webpack:///./src/utils/mathFunctions.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","ns","key","__esModule","create","bind","n","object","property","prototype","hasOwnProperty","p","s","30","e","utils_mathFunctions__WEBPACK_IMPORTED_MODULE_0__","y","direction","timerID","__webpack_exports__","onmessage","msg","data","start","setInterval","postMessage","mouth","omouth","MF","subtract","stop","clearInterval","MathFunctions","x","result","arguments","length","Math","pow","x1","y1","x2","y2","xdiff","ydiff","total","add","square","sqrt","x3","y3","x4","y4","line1","computeLineLength","line2","line3","line4","computePerimeterByLength","side1","side2","side3","side4","side","multiply","base","height","abase","bbase","a1","a2","divide","a","b","_arguments","sum","keys","forEach","radius","PI","sqrtTotal","sumtotal","radiuisTotal","radiusTotal","heightTotal","cube","f","factorial","xbase","inval","r1","xinval","remainder","hexidecimal","incount","ivlen","sschar","num","valueToInt","charAt","xr","yr","angle","rAngle","degreesToRadians","cos","sin","round","startPoint","nextPoints","points","getEllipsePoint","push","getCirclePoint","width","floor","center","getRectangleCenter","p1","ceil","p2","timenow","Date","getTime","hexval","convertFromBaseTenToBaseX","guid","substring"],"mappings":"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","file":"animatedFish.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 30);\n","import MF from 'utils/mathFunctions';\n\nlet y = 5,\n    direction = 1,\n    timerID;\n\nonmessage = ( msg ) => {\n\n    if ( msg && msg.data && msg.data.start ) {\n        timerID = setInterval( () => {\n            if ( direction ) {\n                y++;\n            } else {\n                y--;\n            }\n            if ( y > 15 ) {\n                direction = 0;\n            } else if ( y < 6 ) {\n                direction = 1;\n            }\n            postMessage( {\n                mouth: y,\n                omouth: MF.subtract( y, 4 )\n            } );\n        }, 100 );\n    } else if ( msg && msg.data && msg.data.stop ) {\n        clearInterval( timerID );\n    }\n};\n","/** Math object gives us\n * abs(x) \t\tReturns the absolute value of a number\n * acos(x) \t\tReturns the arccosine of a number\n * asin(x) \t\tReturns the arcsine of a number\n * atan(x) \t\tReturns the arctangent of x as a numeric value between -PI/2 and PI/2 radians\n * atan2(y,x) \tReturns the angle theta of an (x,y) point as a numeric value between -PI and PI radians\n * ceil(x) \t\tReturns the value of a number rounded upwards to the nearest integer\n * cos(x) \t\tReturns the cosine of a number\n * exp(x) \t\tReturns the value of Ex\n * floor(x) \t\tReturns the value of a number rounded downwards to the nearest integer\n * log(x) \t\tReturns the natural logarithm (base E) of a number\n * max(x,y) \t\tReturns the number with the highest value of x and y\n * min(x,y) \t\tReturns the number with the lowest value of x and y\n * pow(x,y) \t\tReturns the value of x to the power of y\n * random() \t\tReturns a random number between 0 and 1\n * round(x) \t\tRounds a number to the nearest integer\n * sin(x) \t\tReturns the sine of a number\n * sqrt(x) \t\tReturns the square root of a number\n * tan(x) \t\tReturns the tangent of an angle\n * toSource() \tRepresents the source code of an object\n * valueOf() \tReturns the primitive value of a Math object\n * and more\n * extend the Math object in JavaScript\n * the Math object is static, so you do not call new on it, just set a reference to it\n */\nconst MathFunctions = {};\n\n/**\n * add(x,y, ...)                Returns x + y [can handle more than 2 parameters ]\n */\nMathFunctions.add = function () {\n    let result = 0;\n    for ( let x = 0; x < arguments.length; x += 1 ) {\n        result += ( +arguments[ x ] );\n    }\n    return result;\n};\n\n/**\n * subtract(x,y)        Returns x - y\n */\nMathFunctions.subtract = function ( x, y ) {\n    return ( ( +x ) - ( +y ) );\n};\n\n/**\n * multiply(x,y, ...)         Returns x * y   [can handle more than 2 parameters ]\n */\nMathFunctions.multiply = function () {\n    let result = 1;\n    for ( let x = 0; x < arguments.length; x += 1 ) {\n        let y = result;\n        result = ( +y ) * ( +arguments[ x ] );\n    }\n    return result;\n};\n\n/**\n * divide(x,y)            Returns x / y\n */\nMathFunctions.divide = function ( x, y ) {\n    return ( ( +x ) / ( +y ) );\n};\n\n/**\n * squares a number\n * x * x or Math.pow(x,2)\n */\nMathFunctions.square = function ( x ) {\n    return Math.pow( x, 2 );\n};\n\n/**\n * cubes a number\n * x * x * x or Math.pow(x,3)\n */\nMathFunctions.cube = function ( x ) {\n    return Math.pow( x, 3 );\n};\n\n/**\n * computes the length of a line in an X-Y plane\n * using the pythagorean theorem ( x^2 + y^2 = z^2) and solving for z\n */\nMathFunctions.computeLineLength = function ( x1, y1, x2, y2 ) {\n    let xdiff = MathFunctions.subtract( x2, x1 );\n    let ydiff = MathFunctions.subtract( y2, y1 );\n    let total = MathFunctions.add( MathFunctions.square( xdiff ), MathFunctions.square( ydiff ) );\n    return Math.sqrt( total );\n};\n\n/**\n * computes the perimeter of a 4 sided object, given 4 points\n */\nMathFunctions.computePerimeter = function ( x1, y1, x2, y2, x3, y3, x4, y4 ) {\n    let line1 = MathFunctions.computeLineLength( x1, y1, x2, y2 );\n    let line2 = MathFunctions.computeLineLength( x2, y2, x3, y3 );\n    let line3 = MathFunctions.computeLineLength( x3, y3, x4, y4 );\n    let line4 = MathFunctions.computeLineLength( x4, y4, x1, y1 );\n    return MathFunctions.computePerimeterByLength( line1, line2, line3, line4 );\n};\n\n/**\n * computes the perimeter of a 4 sided object\n */\nMathFunctions.computePerimeterByLength = function ( side1, side2, side3, side4 ) {\n    return MathFunctions.add( side1, side2, side3, side4 );\n};\n\n/**\n * computes the perimeter of a square\n */\nMathFunctions.computePerimeterOfSquare = function ( side ) {\n    return MathFunctions.multiply( side, 4 );\n};\n\n/* compute area of a triangle */\nMathFunctions.areaOfTriangle = function ( base, height ) {\n    return MathFunctions.multiply( base, height, .5 );\n};\n\n/* compute area of a trapizoid */\nMathFunctions.areaOfTrapizoid = function ( height, abase, bbase ) {\n    let a1, a2;\n    a1 = MathFunctions.add( abase, bbase );\n    a2 = MathFunctions.divide( a1, 2 );\n    return MathFunctions.multiply( height, a2 );\n};\n\nMathFunctions.pythagorean = function ( a, b ) {\n    // return C given a^2 + b^2 = c^2\n    return Math.sqrt( MathFunctions.square( a ) + MathFunctions.square( b ) );\n};\n\n/* compute average */\nMathFunctions.average = function () {\n    let sum = 0;\n    Object.keys( arguments ).forEach( ( e ) => {\n        sum = MathFunctions.add( sum, arguments[ e ] );\n    } );\n    return MathFunctions.divide( sum, arguments.length );\n};\n\n/* compute area of a circle */\nMathFunctions.areaOfCircle = function ( radius ) {\n    return MathFunctions.multiply( Math.PI, MathFunctions.square( radius ) );\n};\n\n/* compute the circumference of a circle */\nMathFunctions.circumferenceOfACircle = function ( radius ) {\n    return MathFunctions.multiply( 2, Math.PI, radius );\n};\n\n/* compute the surface area of a cone */\nMathFunctions.surfaceAreaCone = function ( radius, height ) {\n    let sqrtTotal = Math.sqrt( MathFunctions.multiply( Math.PI, MathFunctions.square( radius ) ) );\n    let sumtotal = MathFunctions.add( MathFunctions.square( radius ), MathFunctions.square( height ) );\n    let radiuisTotal = MathFunctions.multiply( radius, Math.PI, sumtotal );\n    return MathFunctions.add( sqrtTotal, radiuisTotal );\n};\n\n/* compute volume of a cone */\nMathFunctions.volumeCone = function ( radius, height ) {\n    return MathFunctions.multiply( ( 1 / 3 ), Math.PI, MathFunctions.square( radius ), height );\n};\n\n/* compute the surface area of a cylinder */\nMathFunctions.surfaceAreaCylinder = function ( radius, height ) {\n    let radiusTotal = MathFunctions.multiply( 2, Math.PI, MathFunctions.square( radius ) );\n    let heightTotal = MathFunctions.multiply( 2, Math.PI, radius, height );\n    return MathFunctions.add( radiusTotal, heightTotal );\n};\n\n/* compute the volume of a cylinder */\nMathFunctions.volumeCylinder = function ( radius, height ) {\n    return MathFunctions.multiply( Math.PI, MathFunctions.square( radius ), height );\n};\n\n/* compute the surface area of a sphere */\nMathFunctions.surfaceAreaSphere = function ( radius ) {\n    return MathFunctions.multiply( 4, Math.PI, MathFunctions.square( radius ) );\n};\n\n/* compute the volume of a sphere */\nMathFunctions.volumeSphere = function ( radius ) {\n    return MathFunctions.multiply( ( 4 / 3 ), Math.PI, MathFunctions.cube( radius ) );\n};\n\n/* invert a value */\nMathFunctions.inverse = function ( x ) {\n    return MathFunctions.multiply( -1, x );\n};\n\nMathFunctions.oneOver = function ( x ) {\n    return MathFunctions.divide( 1, x );\n};\n\n/* compute a factorial */\nMathFunctions.factorial = function ( x ) {\n    if ( ( +x ) <= 1 ) {\n        return 1;\n    }\n    let f = ( +x ) - 1;\n    return MathFunctions.multiply( x, MathFunctions.factorial( f ) );\n};\n\nMathFunctions.hexidecimal = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\" ];\n\n/* convert from base ten to base x\n * not so good at converting from base 10 to base 10\n * up to base 16 or HEX */\nMathFunctions.convertFromBaseTenToBaseX = function ( xbase, inval ) {\n    let xinval = inval;\n    let remainder = MathFunctions.hexidecimal[ xinval % xbase ];\n    while ( xinval >= xbase ) {\n        let r1 = MathFunctions.subtract( xinval, ( xinval % xbase ) );\n        xinval = MathFunctions.divide( r1, xbase );\n        // in this case we do not want to add we want to append the strings together\n        if ( xinval >= xbase ) {\n            remainder = MathFunctions.hexidecimal[ xinval % xbase ] + remainder;\n        } else {\n            remainder = MathFunctions.hexidecimal[ xinval ] + remainder;\n        }\n    }\n    return remainder;\n};\n\n/* convert from base x to base ten\n * up to base 16 or HEX */\nMathFunctions.convertFromBaseXToBaseTen = function ( xbase, inval ) {\n    let remainder = 0;\n    let num = 1;\n\n    function valueToInt( x ) {\n        for ( let p = 0; p < MathFunctions.hexidecimal.length; p += 1 ) {\n            if ( MathFunctions.hexidecimal[ p ] === x ) {\n                return p;\n            }\n        }\n        return '';\n    }\n    while ( num <= inval.length ) {\n        let incount = Math.pow( xbase, MathFunctions.subtract( num, 1 ) );\n        let ivlen = MathFunctions.subtract( inval.length, num );\n        let sschar = valueToInt( inval.charAt( ivlen ) );\n        remainder = MathFunctions.add( remainder, MathFunctions.multiply( sschar, incount ) );\n        num++;\n    }\n    return remainder;\n};\n\n// given an x and y radius and angle get the x, y point on the ellipse\nMathFunctions.getEllipsePoint = function ( xr, yr, angle ) {\n    const rAngle = MathFunctions.degreesToRadians( angle ),\n        x = MathFunctions.multiply( xr, Math.cos( rAngle ) ),\n        y = MathFunctions.multiply( yr, Math.sin( rAngle ) );\n\n    return {\n        x: Math.round( x ),\n        y: Math.round( y )\n    };\n};\n\n// give a radius get ALL the points on the circle\nMathFunctions.getEllipsePoints = function ( xr, yr ) {\n    const points = [];\n    for ( let startPoint = 0; startPoint <= 360; startPoint++ ) {\n        const nextPoints = MathFunctions.getEllipsePoint( xr, yr, startPoint );\n        points.push( nextPoints );\n    }\n    return points;\n};\n\n// given a radius and angle get the x, y point on the circle\nMathFunctions.getCirclePoint = function ( r, angle ) {\n    const rAngle = MathFunctions.degreesToRadians( angle ),\n        x = MathFunctions.multiply( r, Math.cos( rAngle ) ),\n        y = MathFunctions.multiply( r, Math.sin( rAngle ) );\n\n    return {\n        x: Math.round( x ),\n        y: Math.round( y )\n    };\n};\n\n// give a radius get ALL the points on the circle\nMathFunctions.getCirclePoints = function ( r ) {\n    const points = [];\n    for ( let startPoint = 0; startPoint <= 360; startPoint++ ) {\n        const nextPoints = MathFunctions.getCirclePoint( r, startPoint );\n        points.push( nextPoints );\n    }\n    return points;\n};\n\nMathFunctions.getRectangleCenter = function ( width, height ) {\n    return [ Math.floor( MathFunctions.divide( width, 2 ) ), Math.floor( MathFunctions.divide( height, 2 ) ) ];\n};\n\nMathFunctions.getRectangleCorner = function ( width, height ) {\n    const center = MathFunctions.getRectangleCenter( width, height );\n    const p1 = Math.ceil( MathFunctions.divide( center[ 0 ], 2 ) ),\n        p2 = Math.ceil( MathFunctions.divide( center[ 1 ], 2 ) );\n    return ( p1 < p2 ? p1 : p2 );\n};\n\nMathFunctions.degreesToRadians = function ( x ) {\n    return x * Math.PI / 180;\n};\n\nMathFunctions.radiansToDegrees = function ( x ) {\n    return x * 180 / Math.PI;\n};\n\nMathFunctions.generateGUID = function () {\n    const timenow = new Date().getTime() * 1000000,\n        hexval = MathFunctions.convertFromBaseTenToBaseX( 16, timenow );\n\n    let guid = '';\n    for ( let i = 0, l = hexval.length; i < l; i += 1 ) {\n        guid += ( hexval[ i ] << 1 );\n    }\n\n    guid = hexval + MathFunctions.convertFromBaseTenToBaseX( 16, guid );\n    let result = '';\n    for ( let i = 0, l = guid.length; i < l; i += 1 ) {\n        result += guid[ i ];\n        if ( i > 0 && i % 5 === 0 && i % 10 !== 0 ) {\n            result += \"-\";\n        }\n        if ( i > 0 && i % 9 === 0 ) {\n            result += \"-\";\n        }\n    }\n    if ( result.substring( result.length - 1 ) === \"-\" ) {\n        result = result.substring( 0, result.length - 1 );\n    }\n    return result;\n\n};\n\nexport default MathFunctions;\n"],"sourceRoot":""}