{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/typeCheck.js","webpack:///./src/utils/stack.js","webpack:///./src/utils/stringUtils.js","webpack:///./src/client/browser/xml.js","webpack:///./src/client/net/ajax.js","webpack:///./src/client/net/xmlhttp.js","webpack:///./src/client/workers/resume.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","ns","key","__esModule","create","bind","n","object","property","prototype","hasOwnProperty","p","s","0","e","typeCheck","input","_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default","toLowerCase","exists","x","isString","String","isNumber","Number","isArray","Array","isObject","isTextarea","nodeName","isInput","inp","a","u","h","10","Stack","this","index","list","__webpack_exports__","add","obj","remove","clear","15","replaceAll","inStr","oStr","nStr","sStr","outStr","idx","indexOf","olen","length","found","substring","rtrim","instr","replace","trim","ltrim","isEmpty","tAttributes","isTextNode","processAttributes","node","len","aname","aval","json","attributes","nodeValue","simpleRSSToJSON","j","nodeCT","cNode","attrs","setAttrs","checkNode","jdata","val","stringUtils","childNodes","hasChildNodes","jsonToXML","pNode","childNodeType","makeXMLtag","string","ct","isNaN","xml2json","xmlNode","nodeContent","hscn","cnodes","tot","fname","res","sameNode","hasSameChildNodeName","push","getAsXMLDocument","xmlString","xmlInput","xmlDocument","DOMParser","parseFromString","document","implementation","createDocument","window","ActiveXObject","completed","stack","makeRequest","type","cbFN","url","data","async","headers","arguments","ajaxObj","xmlhttp","XMLHttpRequest","XmlHttp","open","setRequestHeader","onreadystatechange","readyState","send","callbackFN","getData","39","client_net_ajax__WEBPACK_IMPORTED_MODULE_0__","client_browser_xml__WEBPACK_IMPORTED_MODULE_1__","utils_typeCheck__WEBPACK_IMPORTED_MODULE_2__","onmessage","msg","callback","result","DOMDoc","jobs","degrees","misc","skills","responseText","xml","XMLDOMDocument","getElementsByTagName","getFirstNodeText","jobNode","jobtitle","company","jobCity","stateObj","jobLocation","jobTasks","jobMonth","jobYear","jobDates","jobList","jobNodes","cloneNode","E","parseJobs","parseDegree","items","misc_exp","otherexp","militaryexp","parseMisc","skillset","skill","skillarea","title","getAttribute","parseSkills","postMessage","header","ajax","xmlException","error","_typeof2","iterator","constructor","_typeof"],"mappings":"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","file":"resume.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 39);\n","// module for checking data types\nfunction typeCheck( o, s, input ) {\n    return ( input instanceof o || ( typeof input ).toLowerCase() === s ) ? true : false;\n};\n\n// only exists if it is not undefined\nfunction exists( x ) {\n    return ( typeof x !== 'undefined' && x !== null );\n};\n\nfunction isString( input ) {\n    return typeCheck( String, \"string\", input );\n};\n\nfunction isNumber( input ) {\n    return typeCheck( Number, \"number\", input );\n};\n\nfunction isArray( input ) {\n    return Array.isArray( input );\n};\n\nfunction isFunction( input ) {\n    return typeCheck( Function, \"function\", input );\n};\n\nfunction isObject( input ) {\n    return typeCheck( Object, \"object\", input );\n};\n\nfunction isRegExp( input ) {\n    return typeCheck( RegExp, \"regexp\", input );\n};\n\nfunction isTextarea( input ) {\n    let name = input.nodeName;\n    name = ( name ? name : \"\" );\n    return ( name.toLowerCase() === \"textarea\" );\n};\n\nfunction isInput( input ) {\n    let inp = typeof input,\n        name = input.nodeName;\n    name = ( name ? name : \"\" );\n    return ( name.toLowerCase() === \"input\" || ( inp.toLowerCase() === \"input\" && typeof inp[ 'type' ] !== 'undefined' ) );\n};\n\nexport {\n    typeCheck,\n    exists,\n    isString,\n    isNumber,\n    isArray,\n    isFunction,\n    isObject,\n    isRegExp,\n    isTextarea,\n    isInput\n};\n","// simple stack that a caller can call new on\n// this should just be a push pop and get type thing\nfunction Stack() {\n    this.index = 0;\n    this.list = {};\n};\n\nStack.prototype.add = function ( key, obj ) {\n    this.list[ key ] = obj;\n    this.index++;\n};\n\nStack.prototype.remove = function ( key ) {\n    this.list[ key ] = undefined;\n    this.index--;\n};\n\nStack.prototype.get = function ( key ) {\n    return this.list[ key ];\n};\n\nStack.prototype.clear = function () {\n    // need to make sure we don't create any memory leaks\n    for ( let o in this.list ) {\n        if ( o ) {\n            this.list[ o ] = undefined;\n        }\n    }\n    this.index = 0;\n};\n\nexport {\n    Stack\n};\n","//string utility functions\n//some string functions\nfunction reverse( inStr ) {\n    // js does not allow us to change the string passed in so \n    // reverse in place is dumb!\n    let outStr = '';\n    const ilen = inStr.length;\n    for ( let i = ilen - 1; i >= 0; i -= 1 ) {\n        outStr += inStr.charAt( i );\n    }\n    return outStr;\n};\n\nfunction replaceAll( inStr, oStr, nStr ) {\n    // js does not allow us to change the string passed in\n    let outStr = inStr,\n        idx = inStr.indexOf( oStr ),\n        olen = oStr.length,\n        found = ( idx !== -1 );\n    while ( found ) {\n        outStr = outStr.substring( 0, idx ) + nStr + outStr.substring( idx + olen );\n        const sStr = outStr.substring( idx + olen );\n        idx = sStr.indexOf( oStr );\n        found = ( idx !== -1 );\n        idx += outStr.length - sStr.length;\n    }\n    return outStr;\n};\n\nfunction removeDoubleSpaces( instr ) {\n    let out = instr;\n    while ( out && out.match( /\\s\\s/ ) ) {\n        out = out.replace( /\\s\\s/g, ' ' );\n    }\n    return out;\n};\n\nfunction ltrim( instr ) {\n    return ( instr ? instr.replace( /^\\s+/g, '' ) : instr );\n};\n\n\nfunction rtrim( instr ) {\n    return ( instr ? instr.replace( /\\s+$/g, '' ) : instr );\n};\n\nfunction trim( inStr ) {\n    return ltrim( rtrim( inStr ) );\n};\n\nfunction isEmpty( inStr ) {\n    return ( !inStr || trim( inStr ) === \"\" );\n};\n\nexport {\n    reverse,\n    replaceAll,\n    removeDoubleSpaces,\n    ltrim,\n    rtrim,\n    trim,\n    isEmpty\n};\n","//functions for xml processing\nimport * as stringUtils from 'utils/stringUtils';\n\nlet tAttributes = \"attributes\";\n\nfunction isTextNode( inStr ) {\n    return ( inStr === \"#text\" );\n};\n\nfunction hasSameChildNodeName( node ) {\n    let res = false,\n        tot, fname, sameNode = [];\n    if ( node.hasChildNodes() ) {\n        tot = node.childNodes.length;\n        for ( let j = 0; j < tot; j += 1 ) {\n            fname = node.childNodes[ j ].nodeName;\n            if ( sameNode[ fname ] && !isTextNode( fname ) ) {\n                res = true;\n                break;\n            }\n            sameNode[ fname ] = true;\n        }\n    }\n    return res;\n};\n\nfunction processAttributes( node ) {\n    let json = [],\n        len, aname, aval;\n    if ( node.attributes && node.attributes.length > 0 ) {\n        len = node.attributes.length;\n        for ( let i = 0; i < len; i += 1 ) {\n            aname = node.attributes[ i ].nodeName;\n            aval = node.attributes[ i ].nodeValue;\n            json[ aname ] = aval;\n        }\n        return json;\n    }\n    return null;\n};\n\n// this has been updated to handle attributes, but that does not work right now\nexport function simpleRSSToJSON( obj ) {\n    let jdata = {},\n        i, j, nodeCT, cNode,\n        name, attrs, val, setAttrs, checkNode;\n\n    setAttrs = function ( jdata, val, name ) {\n        if ( val && stringUtils.trim( val ) !== '' ) {\n            jdata[ name ][ 'text' ] = val;\n            attrs = processAttributes( obj.childNodes[ j ] );\n            if ( attrs ) {\n                jdata[ name ][ tAttributes ] = attrs;\n            }\n        }\n    };\n    checkNode = function ( j, nodeCT, obj, name ) {\n        let result = ( ( j + 1 < nodeCT && obj.childNodes[ j + 1 ].nodeName === name ) || ( j > 0 && j < nodeCT && obj.childNodes[ j - 1 ].nodeName === name ) || ( j + 2 < nodeCT && obj.childNodes[ j + 2 ].nodeName === name ) || ( j > 1 && j < nodeCT && obj.childNodes[ j - 2 ].nodeName === name ) );\n        return result;\n    };\n    if ( obj && obj.hasChildNodes() ) {\n        j = 0;\n        i = 0;\n        // current node name, although we don't use this\n        // it is not used because the top level node is #document in an xml document \n        // we don't care about the #document node, we want the rss and on down the line\n        nodeCT = obj.childNodes.length;\n        while ( j < nodeCT ) {\n            // name of the current node\n            cNode = obj.childNodes[ j ];\n            name = cNode.nodeName;\n            if ( !jdata[ name ] ) {\n                jdata[ name ] = {};\n            }\n            // our node has child nodes\n            if ( cNode.hasChildNodes() ) {\n                // here we properly identify duplicate nodes, there could be a text node between two identical nodes\n                // this happens when you have a carriage return, tab or space between a closing tag and opening tag\n                if ( checkNode( j, nodeCT, obj, name ) ) {\n                    // duplicately named child nodes, in the case of RSS this would be the item elements\n                    jdata[ name ][ i ] = simpleRSSToJSON.call( this, cNode );\n                    i += 1;\n                    attrs = processAttributes( cNode );\n                    if ( attrs ) {\n                        jdata[ name ][ i ][ tAttributes ] = attrs;\n                    }\n                } else if ( cNode.childNodes.length === 1 && isTextNode( cNode.childNodes[ 0 ].nodeName ) ) {\n                    // just one node and it is a text node so dump the value out\n                    val = cNode.childNodes[ 0 ].nodeValue;\n                    setAttrs( jdata, val, name );\n                } else {\n                    jdata[ name ] = simpleRSSToJSON.call( this, cNode );\n                    attrs = processAttributes( cNode );\n                    if ( attrs ) {\n                        jdata[ name ][ tAttributes ] = attrs;\n                    }\n                }\n            } else {\n                // the child node is a text node and we want that text data\n                val = cNode.nodeValue;\n                setAttrs( jdata, val, name );\n            }\n            j += 1;\n        }\n    }\n    return jdata;\n};\n\n// creates an XML document fragment given a JSON object\n// json lists such as items[0] .. items[1] will be converted to <items></items>... <items></items>\nexport function jsonToXML( json, pNode ) {\n    let string = '',\n        i, attrs,\n        idx = 0,\n        childNodeType, r, h,\n        ct = 0,\n        makeXMLtag;\n\n    makeXMLtag = function ( name, value, attrs ) {\n        const abute = ( attrs ? ' ' + attrs : '' );\n        return '<' + name + abute + '>' + value + '</' + name + '>';\n    };\n\n    for ( i in json ) {\n        ct += 1;\n    }\n    for ( i in json ) {\n        childNodeType = new String( typeof json[ i ] ).toLowerCase();\n        if ( isTextNode( i ) || i === tAttributes ) {\n            // filter out empty text nodes, as they should contain nothing\n            // skip this node it is handled in the next condition better\n        } else if ( i === 'text' ) {\n            // handle text nodes\n            string += json[ i ];\n        } else if ( json[ i ][ tAttributes ] ) {\n            // handle attributes\n            attrs = json[ i ][ tAttributes ];\n            r = '';\n            for ( h in attrs ) {\n                r += h + '=\"' + attrs[ h ] + '\" ';\n            }\n            r = stringUtils.rtrim( r ); // remove trailing space\n            string += makeXMLtag( i, jsonToXML( json[ i ], i ), r );\n        } else if ( childNodeType === 'object' ) {\n            if ( isNaN( i ) ) {\n                string += makeXMLtag( i, jsonToXML( json[ i ], i ) );\n            } else if ( pNode ) {\n                string += jsonToXML( json[ i ], i );\n                if ( idx + 1 < ct ) {\n                    string += makeXMLtag( pNode, '' );\n                }\n            }\n        } else {\n            string += makeXMLtag( i, json[ i ] );\n        }\n        idx += 1;\n    }\n    return string;\n};\n\n// this parses any XML document into a JSON object\n// it puts the attributes for a node in an object called attributes\nexport function xml2json( xmlNode ) {\n    let j, nodeCT, nodeContent,\n        hscn, node, name, value,\n        attrs, cnodes;\n\n    if ( xmlNode.hasChildNodes() ) {\n        j = 0;\n        nodeCT = xmlNode.childNodes.length;\n        nodeContent = {};\n        hscn = hasSameChildNodeName( xmlNode );\n        while ( j < nodeCT ) {\n            node = xmlNode.childNodes[ j ];\n            name = node.nodeName;\n            value = node.nodeValue;\n            attrs = processAttributes( node );\n            if ( node.hasChildNodes() ) {\n                cnodes = xml2json( node );\n                if ( !nodeContent[ name ] ) {\n                    nodeContent[ name ] = ( hscn ) ? [] : {};\n                }\n                if ( hscn ) {\n                    if ( attrs ) {\n                        cnodes[ tAttributes ] = attrs;\n                    }\n                    nodeContent[ name ].push( cnodes );\n                } else if ( isTextNode( name ) && nodeContent[ name ] ) {\n                    // may or may not hit this code\n                    nodeContent[ name ] += value;\n                    if ( attrs ) {\n                        nodeContent[ name ][ tAttributes ] = attrs;\n                    }\n                } else {\n                    nodeContent[ name ] = cnodes;\n                    if ( attrs ) {\n                        nodeContent[ name ][ tAttributes ] = attrs;\n                    }\n                }\n            } else if ( !stringUtils.isEmpty( value ) ) {\n                if ( isTextNode( name ) && nodeContent[ name ] ) {\n                    nodeContent[ name ] += value;\n                } else {\n                    nodeContent[ name ] = value;\n                }\n                if ( attrs ) {\n                    nodeContent[ name ][ tAttributes ] = attrs;\n                }\n            }\n            j += 1;\n        }\n        return nodeContent;\n    } else {\n        name = xmlNode.nodeName;\n        value = xmlNode.nodeValue;\n        // what do we do with attributes?\n        attrs = processAttributes( xmlNode );\n        return {\n            name: value\n        };\n    }\n};\n\nexport function getAsXMLDocument( xmlString ) {\n\n    let xmlDocument = null,\n        xmlInput, isDOMParserCapable,\n        parser, bFound, i, objXML;\n\n    xmlInput = xmlString;\n\n    isDOMParserCapable = function () {\n        try {\n            return ( DOMParser ) ? true : false;\n        } catch ( e ) {\n            return false;\n        }\n    };\n\n    if ( isDOMParserCapable() ) {\n        // then try this\n        try {\n            parser = new DOMParser();\n            xmlDocument = parser.parseFromString( xmlInput, \"text/xml\" );\n        } catch ( e ) {\n            if ( document.implementation && document.implementation.createDocument ) {\n                xmlDocument = document.implementation.createDocument( \"\", \"\", xmlInput );\n            }\n        }\n    } else if ( window.ActiveXObject ) {\n        // IE and active X reject browsers\n        /*@cc_on @*/\n        /*@if (@_jscript_version >= 5)\n        // JScript gives us Conditional compilation, we can cope with old IE versions.\n        // and security blocked creation of the objects.\n        // because MS keeps adding XML implementations\n        // we loop through to find one\n        var ARR_ACTIVEX = [ \"MSXML.DOMDocument.6.0\", \"MSXML.DOMDocument.3.0\", \"MSXML2.DOMDocument\", \"Microsoft.XmlDom\"];\n\n                // bFound is false because we have not found one\n        bFound = false;\n        for (i=0; i < ARR_ACTIVEX.length && !bFound; i++) {\n            try {\n                //try to create the object, it will cause an\n                //error if it doesn't work\n                objXML = new ActiveXObject(ARR_ACTIVEX[i]);\n\n                //if it gets to this point, the string worked,\n                //so save it\n                xmlParserStr = ARR_ACTIVEX[i];\n                bFound = true;\n            } catch (objException) {\n                // do nothing\n            }\n        }\n        // we found our XML parser\n        if ( bFound ) {\n            // create the active x object\n            xmlDocument = new ActiveXObject(ARR_ACTIVEX[i]);\n            xmlDocument.async = false;\n            // actually load the XML string using loadXML\n            xmlDocument.loadXML(xmlInput);\n        }\n        @end @*/\n    }\n    return xmlDocument;\n\n}\n\nexport function transformXML( xmlString, xsltString, resultObj ) {\n\n    // get the XML Document and the XSLT Document\n    let xmlStr = getAsXMLDocument( xmlString ),\n        xsltStr = getAsXMLDocument( xsltString ),\n        completed = false,\n        domParser, xmlDomDoc,\n        xsltDomDoc, xmlxslt, doc;\n\n    // gecko based browser support this\n    // safari, and konqueror, and opera support some of this\n    // but only gecko supportis all of this\n    if ( ( typeof XSLTProcessor !== 'undefined' ) && ( typeof DOMParser !== 'undefined' ) ) {\n        // get the xml and xsl\n        if ( xmlStr && xsltStr ) {\n            // create a new dom parser to convert this\n            // string data into a DOMDocument\n            domParser = new DOMParser();\n            xmlDomDoc = domParser.parseFromString( xmlStr, \"text/xml\" );\n            xsltDomDoc = domParser.parseFromString( xsltStr, \"text/xml\" );\n\n            // create xslt parser and transform document\n            xmlxslt = new XSLTProcessor();\n            xmlxslt.importStylesheet( xsltDomDoc );\n            doc = xmlxslt.transformToFragment( xmlDomDoc, document );\n\n            // create the document as the body\n            resultObj.appendChild( doc );\n            completed = true;\n        }\n    }\n\n    // if the web brselfowser is IE then we will fall here\n    if ( !completed ) {\n        /*@cc_on @*/\n        /*@if (@_jscript_version >= 5)\n\t   // JScript gives us Conditional compilation, we can cope with old IE versions.\n\t   // and security blocked creation of the objects.\n\t   var ARR_ACTIVEX = [\"MSXML4.DOMDocument\", \"MSXML3.DOMDocument\",\n                            \"MSXML2.DOMDocument\", \"MSXML.DOMDocument\", \"Microsoft.XmlDom\"]\n            var xmlParserStr = \"\";\n            var bFound = false;\n            for (var i=0; i < ARR_ACTIVEX.length && !bFound; i++) {\n                try {\n                        //try to create the object, it will cause an\n                        //error if it doesn't work\n                        var objXML = new ActiveXObject(ARR_ACTIVEX[i]);\n\n                        //if it gets to this point, the string worked,\n                        //so save it\n                        xmlParserStr = ARR_ACTIVEX[i];\n                        bFound = true;\n                } catch (objException) {\n                        // do nothing\n                }\n            }\n            // so we have found the xml parser string name\n            if ( bFound ) {\n                // create objects, make them async comm, and then load documents\n                var xmlxslt = new ActiveXObject(ARR_ACTIVEX[i]);\n                var xmldata = new ActiveXObject(ARR_ACTIVEX[i]);\n                xmldata.async = false;\n                xmlxslt.async = false;\n                xmldata.loadXML(xmlStr);\n                xmlxslt.loadXML(xsltStr);\n\n                // transform the documents\n                var doc = xmldata.transformNode(xmlxslt);\n                resultObj.innerHTML = doc;\n                completed = true;\n            }\n            @end @*/\n    }\n    return completed;\n};\n","import XmlHttp from \"client/net/xmlhttp\";\nimport * as Stack from \"utils/stack\";\n\nlet stack = new Stack.Stack();\n\nexport function makeRequest( type, cbFN, url, data, async, headers = {} ) {\n    let h, ajaxObj = {};\n\n    ajaxObj.xmlhttp = XmlHttp();\n    ajaxObj.index = stack.index;\n\n    ajaxObj.xmlhttp.open( type, url, async );\n    for ( h in headers ) {\n        ajaxObj.xmlhttp.setRequestHeader( h, headers[ h ] );\n    }\n    ajaxObj.xmlhttp.onreadystatechange = function () {\n        // the call asigns this callback to our ajax object\n        // so the call can use this in it\n        cbFN.call( ajaxObj );\n        if ( ajaxObj.xmlhttp.readyState === 4 ) {\n            stack.get( 'AJAX_' + ajaxObj.index );\n        }\n    };\n\n    if ( data === null ) {\n        data = \"\";\n    }\n\n    ajaxObj.xmlhttp.send( data );\n    stack.add( 'AJAX_' + ajaxObj.index, {\n        data: ajaxObj\n    } );\n\n    return ajaxObj;\n};\n\n//send a post request, which creates the object\n//takes callback function, url and any data\nexport function post( callbackFN, url, postData ) {\n    const headers = {\n        'Content-Type': 'application/x-www-form-urlencoded'\n    };\n    return makeRequest( \"POST\", callbackFN, url, postData, true, headers );\n};\n\n//do a get request, good for getting a file\n//takes callback function and  url\nexport function get( callbackFN, url, getData ) {\n    return makeRequest( \"GET\", callbackFN, url + ( ( getData ) ? \"?\" + getData : \"\" ), null, true );\n};\n\n//this allows us to cancel this ajax request\nexport function cancelRequest( ajaxObj ) {\n    ajaxObj.xmlhttp.abort();\n    stack.get( 'AJAX_' + ajaxObj.index );\n}\n\nexport function cancelAll() {\n    if ( !stack ) {\n        return;\n    }\n    for ( let i in stack.list ) {\n        const o = stack.get( i );\n        if ( o ) {\n            try {\n                cancelRequest( o.data );\n            } catch ( e ) {\n                // do something\n            }\n        }\n    }\n    stack.index = 0;\n    stack.list = {};\n}\n","//////////////////////////////////////////////////\n// create the xml http request object\n// this works with opera, IE 6+, mozilla 1.7\n// and safari, konqueror, and gecko based browsers\n// returns xmlhttp request object\n//////////////////////////////////////////////////\nexport default function XmlHttp() {\n    let xmlhttp = false;\n    // try to use the default xml http request object first\n    if ( window.XMLHttpRequest ) {\n        xmlhttp = new window.XMLHttpRequest();\n    } else {\n        // fall back for IE here, conditional compilation for IE or later only\n        /*@cc_on @*/\n        /*@if (@_jscript_version >= 5)\n\t\t\t// JScript gives us Conditional compilation, we can cope with old IE versions.\n\t\t\t// and security blocked creation of the objects.\n\t\t\tvar AJAX_ACTIVEX = [\"MSXML2.XMLHTTP.6.0\", \"MSXML.XMLHTTP.3.0\",\n\t\t\t\t\"MSXML2.XMLHTTP\", \"Microsoft.XMLHTTP\"];\n\t\t\tvar aalen = AJAX_ACTIVEX.length;\n\t\t\tvar i = 0;\n\t\t\twhile ( ! xmlhttp && ( i < aalen ) ) {\n\t\t\t\ttry {\n\t\t\t\t\txmlhttp = new ActiveXObject(AJAX_ACTIVEX[i]);\n\t\t\t\t} catch (E) {\n\t\t\t\t\txmlhttp = false;\n\t\t\t\t} \n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\t@end @*/\n    }\n    // last try is here\n    if ( !xmlhttp && ( typeof XMLHttpRequest !== 'undefined' ) ) {\n        xmlhttp = new XMLHttpRequest();\n    }\n    return xmlhttp;\n}\n","import * as ajax from 'client/net/ajax';\nimport * as xml from 'client/browser/xml';\nimport * as typeCheck from 'utils/typeCheck';\n\nfunction getFirstNodeText( XMLDOMDocument, nodeName ) {\n\n    var node = XMLDOMDocument.getElementsByTagName( nodeName );\n    return node[ 0 ].childNodes[ 0 ].nodeValue;\n}\n\nfunction parseSkills( XMLDOMDocument ) {\n\n    var skillarea = XMLDOMDocument.getElementsByTagName( \"skillarea\" )[ 0 ];\n\n    var title = skillarea.getElementsByTagName( \"title\" )[ 0 ];\n\n    var result = '<hr/>';\n    result += '<span class=\"skill_prof\"><a href=\"javascript:WebBrowser.dom.toggleDisplay(\\'skills\\');\">';\n    result += title.childNodes[ 0 ].nodeValue;\n    result += '</a></span>';\n    result += '<br /><div id=\"skills\"><ul>';\n\n    var skillset = skillarea.getElementsByTagName( \"skillset\" );\n    for ( let i = 0; i < skillset.length; i++ ) {\n        // need titles\n        var title = skillset[ i ].getElementsByTagName( \"title\" )[ 0 ];\n        result += '<li>';\n        result += title.childNodes[ 0 ].nodeValue + \": \";\n        var skills = skillset[ i ].getElementsByTagName( \"skill\" );\n        // then need skills\n        for ( let s = 0; s < skills.length; s++ ) {\n            var skill = skills[ s ].childNodes[ 0 ].nodeValue;\n            var skill_level = skills[ s ].getAttribute( \"level\" );\n            result += skill;\n            if ( s < skills.length - 1 ) {\n                result += \", \";\n            }\n        }\n        result += '</li>';\n    }\n\n    result += '</ul></div>';\n\n    return result;\n}\n\nfunction parseMisc( XMLDOMDocument ) {\n\n    var misc = XMLDOMDocument.getElementsByTagName( \"misc\" );\n\n    var misc_exp = misc[ 0 ].getElementsByTagName( \"misc_exp\" );\n\n    var otherexp = misc_exp[ 0 ];\n    var militaryexp = misc_exp[ 1 ];\n\n    var result = '<span class=\"misc\"><a href=\"javascript:WebBrowser.dom.toggleDisplay(\\'misc1\\');\">';\n    result += otherexp.getElementsByTagName( \"name\" )[ 0 ].childNodes[ 0 ].nodeValue;\n    result += '</a></span><br /><div id=\"misc1\"><ul>';\n\n    var items = otherexp.getElementsByTagName( \"item\" );\n    for ( let i = 0; i < items.length; i++ ) {\n        if ( items[ i ].childNodes.length === 1 ) {\n            result += \"<li>\" + items[ i ].childNodes[ 0 ].nodeValue + \"</li>\";\n        } else {\n            result += \"<li>\";\n            for ( let j = 0; j < items[ i ].childNodes.length; j++ ) {\n                if ( items[ i ].childNodes[ j ].length ) {\n                    result += items[ i ].childNodes[ j ].nodeValue;\n                } else {\n                    if ( items[ i ].childNodes[ j ].nodeName === \"url\" ) {\n                        // here we have our url\n                        var url = items[ i ].childNodes[ j ].childNodes[ 0 ].nodeValue;\n                        result += '<a href=\"' + url + '\">' + url + '</a>';\n                    }\n                }\n            }\n            result += \"</li>\";\n        }\n    }\n\n    result += '</ul></div>';\n\n    result += '<span class=\"misc\"><a href=\"javascript:WebBrowser.dom.toggleDisplay(\\'misc2\\');\">';\n    result += militaryexp.getElementsByTagName( \"name\" )[ 0 ].childNodes[ 0 ].nodeValue;\n    result += '</a></span><br /><div id=\"misc2\"><ul>';\n\n    items = militaryexp.getElementsByTagName( \"item\" );\n    for ( let i = 0; i < items.length; i++ ) {\n        result += \"<li>\" + items[ i ].childNodes[ 0 ].nodeValue + \"</li>\";\n    }\n\n    result += '</ul></div>';\n\n    return result;\n}\n\nfunction parseDegree( XMLDOMDocument ) {\n\n    var result = '<span class=\"misc\"><a href=\"javascript:WebBrowser.dom.toggleDisplay(\\'education\\');\">EDUCATION</a></span>';\n    result += '<br /><div id=\"education\">';\n\n    var degrees = XMLDOMDocument.getElementsByTagName( \"academics\" );\n\n    var level = degrees[ 0 ].getElementsByTagName( \"level\" )[ 0 ].childNodes[ 0 ].nodeValue;\n    var major = degrees[ 0 ].getElementsByTagName( \"major\" )[ 0 ].childNodes[ 0 ].nodeValue;\n    var inst = degrees[ 0 ].getElementsByTagName( \"institution\" )[ 0 ].childNodes[ 0 ].nodeValue;\n    var mon = degrees[ 0 ].getElementsByTagName( \"month\" )[ 0 ].childNodes[ 0 ].nodeValue;\n    var year = degrees[ 0 ].getElementsByTagName( \"year\" )[ 0 ].childNodes[ 0 ].nodeValue;\n\n    var para = degrees[ 0 ].getElementsByTagName( \"para\" )[ 0 ].childNodes[ 0 ].nodeValue;\n\n    result += \"<ul><li>\" + level + \" in \" + major + \", \" + inst + \", \";\n    result += mon + \" \" + year + \". \" + para + \"</li></ul></div>\";\n\n    return result;\n}\n\nfunction parseJobs( XMLDOMDocument ) {\n\n    // this gives us a list of the actual jobs in the page\n    var jobNodes = XMLDOMDocument.getElementsByTagName( \"job\" );\n\n    // we should try\n\n    var result = '<span class=\"profexp\"><a href=\"javascript:WebBrowser.dom.toggleDisplay(\\'profexp\\');\">PROFESSIONAL EXPERIENCE</a></span>';\n    result += '<br /><div id=\"profexp\"><br />';\n\n    for ( let i = 0; i < jobNodes.length; i++ ) {\n\n        var job = jobNodes[ i ].childNodes;\n\n        // get the current job as a document object\n        var jobNode = jobNodes[ i ].cloneNode( true );\n\n        var jobtitle = jobNode.getElementsByTagName( \"jobtitle\" )[ 0 ].childNodes[ 0 ].nodeValue;\n        var company = jobNode.getElementsByTagName( \"company\" )[ 0 ].childNodes[ 0 ].nodeValue;\n\n        var joburl = \"\";\n        if ( jobNode.getElementsByTagName( \"url\" ) ) {\n            var url = jobNode.getElementsByTagName( \"company\" )[ 0 ].childNodes[ 0 ].nodeValue;\n        }\n\n        var jobCity = jobNode.getElementsByTagName( \"city\" )[ 0 ].childNodes[ 0 ].nodeValue;\n        var stateObj = jobNode.getElementsByTagName( \"state\" )[ 0 ];\n        var jobLocation = jobCity;\n        if ( typeCheck.exists( stateObj ) && stateObj.childNodes.length > 0 ) {\n            jobLocation = jobCity + \", \" + stateObj.childNodes[ 0 ].nodeValue;\n        }\n\n        var jobTasks = jobNode.getElementsByTagName( \"achievement\" );\n        var jobMonth = jobNode.getElementsByTagName( \"month\" );\n        var jobYear = jobNode.getElementsByTagName( \"year\" );\n        var jobDates = \"\";\n        if ( typeCheck.exists( jobMonth ) ) {\n            jobDates = jobMonth[ 0 ].childNodes[ 0 ].nodeValue + \" \" + jobYear[ 0 ].childNodes[ 0 ].nodeValue;\n            jobDates += \" - \";\n            try {\n                jobDates += jobMonth[ 1 ].childNodes[ 0 ].nodeValue + \" \";\n            } catch ( E ) {}\n            jobDates += jobYear[ 1 ].childNodes[ 0 ].nodeValue;\n        }\n\n        var jobList = '';\n        for ( let j = 0; j < jobTasks.length; j++ ) {\n            jobList += \"<li>\";\n            jobList += jobTasks[ j ].childNodes[ 0 ].nodeValue;\n            jobList += \".</li>\";\n        }\n        result += '<span class=\"empmnt\">' + jobtitle + \", \" + company;\n        result += \", \" + jobLocation + \" (\" + jobDates + \")\";\n        result += '</span><ul>' + jobList + '</ul>';\n    }\n    result += '</div>';\n    return result;\n}\n\nonmessage = ( msg ) => {\n\n    var jsonData = [];\n\n    let callback;\n    try {\n\n        callback = function () {\n            if ( this.xmlhttp.readyState === 4 ) {\n                var result = this.xmlhttp.responseText;\n                var DOMDoc = xml.getAsXMLDocument( result );\n\n                jsonData = xml.xml2json( DOMDoc );\n\n                var header = '<table width=\"100%\"><tr><td align=\"left\">';\n\n                var url = getFirstNodeText( DOMDoc, \"url\" );\n\n                header += '</td></tr></table>';\n\n                var jobs = parseJobs( DOMDoc );\n\n                var degrees = parseDegree( DOMDoc );\n\n                var misc = parseMisc( DOMDoc );\n\n                var skills = parseSkills( DOMDoc );\n\n                header = '<div style=\"text-align:center; font-weight: bold;\">header not displayed for privacy</div>';\n\n                postMessage( {\n                    header,\n                    skills,\n                    jobs,\n                    degrees,\n                    misc\n                } );\n            }\n        };\n\n        // try hard parsing here\n        var ajaxObj = ajax.get( callback, \"resume_data.xml\", null );\n\n    } catch ( xmlException ) {\n\n        let res = \"Your browser is not supported for this feature.\";\n        res += \"<br />Sorry I tried!\";\n        res += \"<br />So far, known supported browsers are IE 6.0+ and newer Gecko based browsers.\";\n        res += \"<br />If you use IE make sure ActiveX is enabled.\";\n\n        postMessage( {\n            error: res\n        } );\n    }\n};\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;"],"sourceRoot":""}